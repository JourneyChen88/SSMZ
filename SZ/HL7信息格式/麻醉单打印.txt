 private void printDocument1_PrintPage(object sender, System.Drawing.Printing.PrintPageEventArgs e)
        {
            int x = 40, y = 0;//整体位置控制
            int xStd = 170;
            string title = "               库 车 县 人 民 医 院";
            //标题     
            string title2 = "           麻 醉 记 录";//标题       
            Pen ptp = Pens.Gray;//普通画笔
            Pen ptp1 = Pens.Black;//普通画笔
            //Pen ptp = new Pen(Brushes.Black, 0.1f);
            Pen pblack2 = new Pen(Brushes.Black, 2);
            Pen pxuxian = new Pen(Brushes.Gray);
            pxuxian.DashStyle = System.Drawing.Drawing2D.DashStyle.Dot;
            Font ptzt14 = new System.Drawing.Font("宋体", 14);//标题
            Font ptzt13 = new System.Drawing.Font("宋体", 13);//标题      
            Font ptzt15 = new System.Drawing.Font("黑体", 15);//标题        
            Font ptzt12 = new Font("宋体", 12);//填入栏目字体
            Font ptzt11 = new Font("宋体", 11);//填入栏目字体
            Font ptzt10 = new Font("宋体", 10);//填入栏目字体
            Font ptzt9 = new Font("宋体", 9);//填入栏目字体          
            Font ptzt8 = new Font("宋体", 8);//填入栏目字体
            Font ptzt88 = new Font("宋体", 8);//填入栏目字体
            Font ht7 = new Font("黑体", 7);//填入栏目字体
            Font ptzt7 = new Font("宋体", 7);//填入栏目字体 
            Font ptzt7_U = new Font("宋体", 7, FontStyle.Underline, GraphicsUnit.Point);//下划线字体
            Font ptzt6 = new Font("宋体", 6);//填入栏目字体
            Font ptzt5 = new Font("宋体", 5);//填入栏目字体
            Font ptzt4 = new Font("宋体", 4);//填入栏目字体
            Pen pred2 = new Pen(Brushes.Red, 2);
            Pen pblue2 = new Pen(Brushes.Blue, 1);
            e.Graphics.DrawString(title, ptzt13, Brushes.Black, new Point(80 + x, 20 + y));
            e.Graphics.DrawString(title2, ptzt15, Brushes.Black, new Point(130 + x, 45 + y));
            int Y_unLine = y + 93, YY = y + 80, SZYY = 0;
            int FYYY = YY;//控制分页y
            e.Graphics.DrawString("科别：" + txtBingQu.Controls[0].Text, ptzt8, Brushes.Black, new Point(10 + x, YY));
            //e.Graphics.DrawString(txtBingQu.Controls[0].Text == "" ? "/" : txtBingQu.Controls[0].Text, ptzt8, Brushes.Black, new Point(65 + x, YY));

            e.Graphics.DrawLine(ptp, new Point(40 + x, Y_unLine), new Point(160 + x, Y_unLine));
            e.Graphics.DrawString("床号：" + txtBednumber.Controls[0].Text, ptzt8, Brushes.Black, new Point(138 + x, YY));
            //e.Graphics.DrawString(txtBednumber.Controls[0].Text == "" ? "/" : txtBednumber.Controls[0].Text, ptzt8, Brushes.Black, new Point(205 + x, YY));
            e.Graphics.DrawLine(ptp, new Point(200 + x, Y_unLine), new Point(250 + x, Y_unLine));
            e.Graphics.DrawString("病历号：" + txtZhuYuanHao.Controls[0].Text, ptzt8, Brushes.Black, new Point(290 + x, YY));
            //e.Graphics.DrawString(txtZhuYuanHao.Controls[0].Text == "" ? "/" : txtZhuYuanHao.Controls[0].Text, ptzt8, Brushes.Black, new Point(335 + x, YY));
            e.Graphics.DrawLine(ptp, new Point(330 + x, Y_unLine), new Point(420 + x, Y_unLine));
            e.Graphics.DrawString("手术日期：" + dtOdate.Value.ToString("yyyy年MM月dd日"), ptzt8, Brushes.Black, new Point(480 + x, YY));
            e.Graphics.DrawLine(ptp, new Point(530 + x, Y_unLine), new Point(620 + x, Y_unLine));

            //↑画标题一块的东西
            Y_unLine = YY + 15; YY = YY + 20;
            //e.Graphics.DrawLine(pblack2, new Point(20 + x, 70 + y), new Point(650 + x, 70 + y));
            //e.Graphics.DrawLine(pblack2, new Point(20 + x, 70 + y), new Point(20 + x, 980 + y));
            //e.Graphics.DrawLine(pblack2, new Point(650 + x, 70 + y), new Point(650 + x, 980 + y));
            //e.Graphics.DrawLine(pblack2, new Point(20 + x, 980 + y), new Point(650 + x, 980 + y));          
            //↑画边框

            #region 打印病人基本信息
            YY = YY + 5; Y_unLine = YY + 13;

            //为空画斜杠

            e.Graphics.DrawString("姓名 " + txtName.Controls[0].Text, ptzt8, Brushes.Black, new Point(25 + x, YY));
            e.Graphics.DrawLine(ptp, new Point(50 + x, Y_unLine), new Point(160 + x, Y_unLine));
            e.Graphics.DrawString("年龄 " + txtAge.Controls[0].Text, ptzt8, Brushes.Black, new Point(165 + x, YY));
            e.Graphics.DrawLine(ptp, new Point(180 + x, Y_unLine), new Point(220 + x, Y_unLine));
            e.Graphics.DrawString("岁  性别 " + txtSex.Controls[0].Text, ptzt8, Brushes.Black, new Point(225 + x, YY));
            e.Graphics.DrawLine(ptp, new Point(275 + x, Y_unLine), new Point(295 + x, Y_unLine));
            e.Graphics.DrawString("身高 " + txtHeight.Controls[0].Text, ptzt8, Brushes.Black, new Point(300 + x, YY));
            e.Graphics.DrawLine(ptp, new Point(315 + x, Y_unLine), new Point(350 + x, Y_unLine));
            if (txtHeight.Controls[0].Text == "")
            {
                e.Graphics.DrawLine(ptp, new Point(327 + x, Y_unLine), new Point(340 + x, YY + 2));
            }
            e.Graphics.DrawString("cm", ptzt8, Brushes.Black, new Point(350 + x, YY));
            e.Graphics.DrawString("体重 " + txtWeight.Controls[0].Text, ptzt8, Brushes.Black, new Point(365 + x, YY));
            e.Graphics.DrawLine(ptp, new Point(395 + x, Y_unLine), new Point(425 + x, Y_unLine));
            if (txtWeight.Controls[0].Text == "")
            {
                e.Graphics.DrawLine(ptp, new Point(400 + x, Y_unLine), new Point(410 + x, YY + 2));
            }
            e.Graphics.DrawString("kg", ptzt8, Brushes.Black, new Point(415 + x, YY));

            e.Graphics.DrawLine(ptp, new Point(475 + x, YY - 5), new Point(475 + x, YY + 20 * 4));//画竖线
            e.Graphics.DrawString("ASA分级 " + cmbASA.Text, ptzt8, Brushes.Black, new Point(480 + x, YY));


            e.Graphics.DrawString("□ 急诊", ptzt8, Brushes.Black, new Point(550 + x, YY));
            e.Graphics.DrawString("□ 择期", ptzt8, Brushes.Black, new Point(600 + x, YY));

            if (cbJizhen.Checked)
                //e.Graphics.DrawString("√", ptzt9, Brushes.Blue, new Point(650 + x, YY));

                e.Graphics.DrawLines(pblue2, new Point[] { new Point(550 + x, YY), new Point(555 + x, YY + 10), new Point(565 + x, YY) });
            if (cbZeqi.Checked)
                e.Graphics.DrawLines(pblue2, new Point[] { new Point(600 + x, YY), new Point(605 + x, YY + 8), new Point(615 + x, YY) });

            YY = YY + 20; Y_unLine = YY + 13;
            e.Graphics.DrawString("血压 " + txtXueya.Controls[0].Text, ptzt8, Brushes.Black, new Point(25 + x, YY));
            e.Graphics.DrawLine(ptp, new Point(55 + x, Y_unLine), new Point(110 + x, Y_unLine));
            if (txtXueya.Controls[0].Text == "")
            {
                e.Graphics.DrawLine(ptp, new Point(70 + x, Y_unLine), new Point(90 + x, YY + 2));
            }
            e.Graphics.DrawString("mmHg 脉搏 " + txtMaibo.Controls[0].Text, ptzt8, Brushes.Black, new Point(115 + x, YY));
            e.Graphics.DrawLine(ptp, new Point(175 + x, Y_unLine), new Point(200 + x, Y_unLine));
            if (txtMaibo.Controls[0].Text == "")
            {
                e.Graphics.DrawLine(ptp, new Point(180 + x, Y_unLine), new Point(190 + x, YY + 2));
            }
            e.Graphics.DrawString("bpm 呼吸 " + txtHuxi.Controls[0].Text, ptzt8, Brushes.Black, new Point(205 + x, YY));
            e.Graphics.DrawLine(ptp, new Point(260 + x, Y_unLine), new Point(285 + x, Y_unLine));
            if (txtHuxi.Controls[0].Text == "")
            {
                e.Graphics.DrawLine(ptp, new Point(270 + x, Y_unLine), new Point(280 + x, YY + 2));
            }
            e.Graphics.DrawString("bpm 体温 " + txtTW.Controls[0].Text, ptzt8, Brushes.Black, new Point(290 + x, YY));
            e.Graphics.DrawLine(ptp, new Point(345 + x, Y_unLine), new Point(370 + x, Y_unLine));
            if (txtTW.Controls[0].Text == "")
            {
                e.Graphics.DrawLine(ptp, new Point(350 + x, Y_unLine), new Point(360 + x, YY + 2));
            }
            e.Graphics.DrawString("℃", ptzt8, Brushes.Black, new Point(370 + x, YY));
            e.Graphics.DrawString("血型 " + cmbXueXing.Text, ptzt8, Brushes.Black, new Point(390 + x, YY));
            e.Graphics.DrawLine(ptp, new Point(415 + x, Y_unLine), new Point(460 + x, Y_unLine));
            int TS_yy = YY;
            e.Graphics.DrawString("特殊病情：", ptzt8, Brushes.Black, new Point(480 + x, YY));
            if (string.IsNullOrEmpty(txtTSBQing.Controls[0].Text.Trim()))
                txtTSBQing.Controls[0].Text = " 无";
            string str = "";
            int StrLength = txtTSBQing.Controls[0].Text.Trim().Length + 5;
            int row = StrLength / 14;
            if (StrLength > 14)
            {
                for (int i = 0; i <= StrLength / 14; i++)//21个字符就换行
                {
                    if (i == 0)
                    {
                        str = txtTSBQing.Controls[0].Text.Trim().Substring(0, 9);
                    }
                    else if (i == 3)
                    {
                        break;
                    }
                    else if (i < row)
                        str = txtTSBQing.Controls[0].Text.Trim().Substring(i * 14 - 5, 14); //从第i*21-5个开始，截取21个字符串
                    else
                        str = txtTSBQing.Controls[0].Text.Trim().Substring(i * 14 - 5);
                    if (i == 0)
                    {
                        e.Graphics.DrawString(str, ptzt8, Brushes.Black, new Point(535 + x, TS_yy));
                    }
                    else
                    {
                        e.Graphics.DrawString(str, ptzt8, Brushes.Black, new Point(480 + x, TS_yy));
                    }
                    TS_yy = 20 + TS_yy;
                }
            }
            else
            {
                e.Graphics.DrawString(txtTSBQing.Controls[0].Text, ptzt8, Brushes.Black, new Point(535 + x, TS_yy));
            }

            YY = YY + 20; Y_unLine = YY + 13;
            e.Graphics.DrawString("术前诊断  " + txtSqzd.Controls[0].Text, ptzt8, Brushes.Black, new Point(25 + x, YY));
            e.Graphics.DrawLine(ptp, new Point(70 + x, Y_unLine), new Point(240 + x, Y_unLine));
            e.Graphics.DrawString("拟施手术  " + txtNssss.Controls[0].Text, ptzt8, Brushes.Black, new Point(240 + x, YY));
            e.Graphics.DrawLine(ptp, new Point(290 + x, Y_unLine), new Point(470 + x, Y_unLine));
            YY = YY + 20; Y_unLine = YY + 13;

            e.Graphics.DrawString("术前用药  " + txtSqyy.Controls[0].Text, ptzt8, Brushes.Black, new Point(25 + x, YY));
            if (txtSqyy.Controls[0].Text == "")
            {
                //e.Graphics.DrawLine(ptp, new Point(100 + x, Y_unLine), new Point(400 + x, Y_unLine-13));
                e.Graphics.DrawString("无", ptzt8, Brushes.Black, new Point(75 + x, YY));
            }
            e.Graphics.DrawLine(ptp, new Point(70 + x, Y_unLine), new Point(470 + x, Y_unLine));


            YY = YY + 20; Y_unLine = YY + 13;
            e.Graphics.DrawLine(ptp, new Point(20 + x, YY), new Point(650 + x, YY));
            //↑画边框
            #endregion

            #region 打印时间和分页
            DateTime dtnow = new DateTime();//打印截止时间判断        
            DateTime pagetime = new DateTime();
            DataTable dtMax = bll.GetMaxPoint(mzjldID);

            if (dtMax.Rows[0][0].ToString() == "")
                dtnow = DateTime.Now;
            else
                dtnow = Convert.ToDateTime(dtMax.Rows[0][0]);
            //if (iYema > 1)
            //    ptime = ptime.AddMinutes(-3 * jcsjjg);
            pagetime = ptime; //当前打印页时间           
            e.Graphics.DrawString("时间(分钟)", ptzt8, Brushes.Black, new Point(30 + x, YY + 2));
            for (int i = 0; i < 9; i++) //打印检测时间
            {
                e.Graphics.DrawString(ptime.ToString("HH:mm"), ptzt7, Brushes.Black, new Point(xStd + x - 10 + 60 * i, YY + 2));
                ptime = ptime.AddMinutes(6 * jcsjjg);
            }
            if (ptime < dtnow)
            //if (ptime.AddMinutes(-3 * jcsjjg) < dtnow)
            {
                e.HasMorePages = true;
                e.Graphics.DrawString("第 " + iYema.ToString() + " 页", ptzt8, Brushes.Black, new Point(550 + x, FYYY - 50));
                iYema++;
            }
            else
            {
                e.HasMorePages = false; ptime = fristopen;
                if (iYema != 1)
                {
                    e.Graphics.DrawString("第 " + iYema.ToString() + " 页", ptzt8, Brushes.Black, new Point(550 + x, FYYY - 50));
                }
            }
            #endregion

            #region  打印用药区域
            YY = YY + 18; SZYY = YY;
            for (int i = 0; i < 19; i++)//画横实线
            {
                if (i == 10 || i == 15 || i == 18)
                    e.Graphics.DrawLine(ptp1, new Point(20 + x, YY + 12 * i + y), new Point(650 + x, YY + 12 * i + y));
                else if (i == 0)
                    e.Graphics.DrawLine(ptp, new Point(20 + x, YY + 12 * i + y), new Point(650 + x, YY + 12 * i + y));
                else
                    e.Graphics.DrawLine(ptp, new Point(35 + x, YY + 12 * i + y), new Point(650 + x, YY + 12 * i + y));
            }
            e.Graphics.DrawLine(ptp, new Point(35 + x, YY + y), new Point(35 + x, YY + 22 * 12 + y));

            for (int i = 0; i < 17; i++)//画竖实线
            {

                e.Graphics.DrawLine(ptp, new Point(xStd + x + 30 * i, YY - 2 + y), new Point(xStd + x + 30 * i, YY + 22 * 12 + y));
            }

            for (int i = 0; i < 17; i++)//画竖实线
            {

                e.Graphics.DrawLine(pblack2, new Point(xStd + x + 30 * i, YY - 2 + y), new Point(xStd + x + 30 * i, YY + 22 * 12 + y + 30));
                i++;
            }
            for (int i = 1; i < 48; i++)//画竖虚线
            {
                e.Graphics.DrawLine(pxuxian, new Point(xStd + x + 10 * i, YY + y), new Point(xStd + x + 10 * i, YY + 22 * 12 + y));
            }
            //e.Graphics.DrawString("气\n吸\n药", ptzt7, Brushes.Black, new Point(22 + x, YY ));
            e.Graphics.DrawString("吸氧", ptzt7, Brushes.Black, new Point(75 + x, YY + 3));
            e.Graphics.DrawString("\n\n用\n药\n及\n输\n液\n情\n况", ptzt7, Brushes.Black, new Point(22 + x, YY - 15));
            e.Graphics.DrawString("输\n液\n输\n血", ptzt7, Brushes.Black, new Point(22 + x, YY + 11 * 12));
            //e.Graphics.DrawString("输\n血", ptzt7, Brushes.Black, new Point(22 + x, YY + 12 * 24 + 10));
            #endregion

            #region 打印气体
            ArrayList sssQT = new ArrayList();
            int qti = 0;   //起步位置
            foreach (adims_MODEL.Yongyao mzqt in mzqtList)
            {
                // DataTable dtM = bll.addYongyaoListzling(mzjldID, mzqt.Name);
                // string bb = dtM.Rows[0][0].ToString();
                if (sssQT.Contains(mzqt.Name))
                    qti = qti - 1;
                if (!sssQT.Contains(mzqt.Name))

                    e.Graphics.DrawString(mzqt.Name + mzqt.Dw, mzqt.Name.Length < 7 ? ptzt7 : ptzt7,
                        Brushes.Black, new PointF(37 + x, YY + qti * 12 + y + 3));
                TimeSpan t = new TimeSpan();
                TimeSpan t1 = new TimeSpan();
                if (mzqt.Bz == 1)
                {
                    t = mzqt.KsTime - pagetime;
                    if (ssjsTime > Convert.ToDateTime("1990-01-01"))
                    {
                        DataTable dtMaxs = bll.GetMaxPoint(mzjldID);
                        DateTime dtnows = new DateTime();

                        if (dtMax.Rows[0][0].ToString() != "")
                        {
                            dtnows = Convert.ToDateTime(dtMax.Rows[0][0]);
                            if (dtnows > ssjsTime)
                            {
                                t1 = dtnows - otime;
                            }
                            else
                            {
                                t1 = ssjsTime - otime;
                            }
                        }
                        else
                        {
                            t1 = ssjsTime - otime;
                        }
                    }
                    else
                    {
                        t1 = DateTime.Now - pagetime;
                    }
                }
                if (mzqt.Bz == 2)
                {

                    t = mzqt.KsTime - pagetime;
                    t1 = mzqt.JsTime - pagetime;
                }
                int x1 = (int)((t.Days * 24 * 60 + t.Hours * 60 + t.Minutes) * 10 / jcsjjg + 170) + x;
                int y1 = YY + qti * 12 + 4;
                int x2 = (int)((t1.Days * 24 * 60 + t1.Hours * 60 + t1.Minutes) * 10 / jcsjjg + 170) + x;
                //double qtzongliang = (mzqt.Yl) * Convert.ToDouble((x2 - x1) / 2.5);
                //e.Graphics.DrawString(Convert.ToInt32(qtzongliang).ToString() + "L", this.Font, Brushes.Blue, new Point(763, y1 - 2));
                if (x1 > xStd + x && x1 < 650 + x)
                {

                    e.Graphics.DrawString(mzqt.Yl.ToString() + " " + mzqt.Dw, ptzt7, Brushes.Blue, new Point(x1 + 3, y + y1 - 6));
                    e.Graphics.FillPolygon(Brushes.Black, new Point[3] { new Point(x1, y1 + y), new Point(x1 - 3, y1 + 6 + y), new Point(x1 + 3, y1 + 6 + y) });
                }

                if (x2 > xStd + x && x2 < 650 + x)
                {
                    if (mzqt.Bz == 1)
                    {
                        e.Graphics.DrawLine(pred2, new Point(x2, y1 + 3), new Point(x2 - 5, y1));
                        e.Graphics.DrawLine(pred2, new Point(x2, y1 + 3), new Point(x2 - 5, y1 + 6));
                    } if (mzqt.Bz == 2)
                    {
                        e.Graphics.FillPolygon(Brushes.Black, new Point[3] { new Point(x2, y1 + y), new Point(x2 - 3, y1 + 6 + y), new Point(x2 + 3, y1 + 6 + y) });
                    }

                }
                if (x1 > xStd + x && x1 < 650 + x && x2 > xStd + x && x2 < 650 + x)
                {
                    e.Graphics.DrawLine(pred2, new Point(x1, y1 + y + 3), new Point(x2, y1 + y + 3));
                }
                if (x1 > xStd + x && x1 < 650 + x && x2 > 650 + x)
                {
                    e.Graphics.DrawLine(pred2, new Point(x1, y1 + y + 3), new Point(650 + x, y1 + y + 3));
                }
                if (x1 < xStd + x && x2 > xStd + x && x2 < 650 + x)
                {
                    e.Graphics.DrawLine(pred2, new Point(xStd + x, y1 + y + 3), new Point(x2, y1 + y + 3));
                }
                if (x1 < xStd + x && x2 > 650 + x)
                {
                    e.Graphics.DrawLine(pred2, new Point(xStd + x, y1 + y + 3), new Point(650 + x, y1 + y + 3));
                }

                qti++;
                sssQT.Add(mzqt.Name);
            }

            #endregion


            #region 打印全麻药
            ArrayList sssYDY = new ArrayList();
            int ydyi = qti;
            foreach (adims_MODEL.Yongyao mzyt in ydyList) //打印全麻药
            {
                DataTable dtM = bll.addYongyaoListzling(mzjldID, mzyt.Name, mzyt.Yyfs);
                string bb = dtM.Rows[0][0].ToString();
                DataTable dtMn = bll.queryYongyaoccc(mzjldID, mzyt.Name, mzyt.Yyfs);
                string al = dtMn.Rows[0][0].ToString();//判断用是否持续用药
                if (sssYDY.Contains(mzyt.Name + "|" + mzyt.Yyfs))
                    ydyi = ydyi - 1;
                if (!sssYDY.Contains(mzyt.Name))
                    e.Graphics.DrawString(mzyt.Name + " " + bb + mzyt.Dw, mzyt.Name.Length < 7 ? ptzt7 : ptzt7,
                        Brushes.Black, new PointF(37 + x, YY + ydyi * 12 + y + 3));

                if (mzyt.Cxyy == false)
                {
                    TimeSpan t = new TimeSpan();
                    t = mzyt.KsTime - pagetime;
                    int x1 = (int)((t.Days * 24 * 60 + t.Hours * 60 + t.Minutes) * 10 / jcsjjg + 170) + x;
                    int y1 = YY + ydyi * 12 + 4;
                    if (x1 > 100 + x && x1 < 650 + x)
                    {
                        e.Graphics.DrawString(mzyt.Yl.ToString() + mzyt.Yyfs.ToString(), ptzt7, Brushes.Blue, new Point(x1 + 3, y + y1 - 6));
                        e.Graphics.FillPolygon(Brushes.Black, new Point[3] { new Point(x1, y1 + y), new Point(x1 - 3, y1 + 6 + y), new Point(x1 + 3, y1 + 6 + y) });
                    }
                }
                if (mzyt.Cxyy == true)
                {
                    TimeSpan t = new TimeSpan();
                    TimeSpan t1 = new TimeSpan();
                    if (mzyt.Bz == 1)
                    {
                        t = mzyt.KsTime - pagetime;
                        if (ssjsTime > Convert.ToDateTime("1990-01-01"))
                        {
                            DataTable dtMaxs = bll.GetMaxPoint(mzjldID);
                            DateTime dtnows = new DateTime();
                            if (dtMax.Rows[0][0].ToString() != "")
                            {
                                dtnows = Convert.ToDateTime(dtMax.Rows[0][0]);
                                if (dtnows > ssjsTime)
                                {
                                    t1 = dtnows - pagetime;
                                }
                                else
                                {
                                    t1 = ssjsTime - pagetime;
                                }
                            }
                            else
                            {
                                t1 = ssjsTime - pagetime;
                            }
                        }
                        else
                        {
                            t1 = DateTime.Now - pagetime;
                        }
                    }
                    if (mzyt.Bz == 2)
                    {
                        t = mzyt.KsTime - pagetime;
                        t1 = mzyt.JsTime - pagetime;
                    }
                    int x1 = (int)((t.Days * 24 * 60 + t.Hours * 60 + t.Minutes) * 10 / jcsjjg + 170) + x;
                    int y1 = YY + ydyi * 12 + 4;
                    int x2 = (int)((t1.Days * 24 * 60 + t1.Hours * 60 + t1.Minutes) * 10 / jcsjjg + 170) + x;
                    if (x1 > xStd + x && x1 < 650 + x)
                    {
                        //if (al == "")
                        //{
                        //    e.Graphics.DrawString(mzyt.Yl.ToString()+mzyt.Dw.ToString() + mzyt.Yyfs.ToString(), ptzt7, Brushes.Blue, new Point(x1 + 3, y + y1 - 6));
                        //    e.Graphics.FillPolygon(Brushes.Black, new Point[3] { new Point(x1, y1 + y), new Point(x1 - 3, y1 + 6 + y), new Point(x1 + 3, y1 + 6 + y) });
                        //}
                        //else {
                        e.Graphics.DrawString((String.IsNullOrEmpty(mzyt.Yongliang) ? mzyt.Yl.ToString() : mzyt.Yongliang.ToString())
                               + mzyt.Dw.ToString() + mzyt.Yyfs.ToString(), this.Font, Brushes.Blue, new Point(x1 + 3, y + y1 - 6));
                        //e.Graphics.DrawString(mzyt.Yl.ToString()+"-"+al + mzyt.Dw.ToString() + mzyt.Yyfs.ToString(), ptzt7, Brushes.Blue, new Point(x1 + 3, y + y1 - 6));
                        e.Graphics.FillPolygon(Brushes.Black, new Point[3] { new Point(x1, y1 + y), new Point(x1 - 3, y1 + 6 + y), new Point(x1 + 3, y1 + 6 + y) });

                    }
                    if (x2 > xStd + x && x2 < 650 + x)
                    {
                        if (mzyt.Bz == 1)
                        {
                            e.Graphics.DrawLine(pred2, new Point(x2, y1 + 3), new Point(x2 - 5, y1));
                            e.Graphics.DrawLine(pred2, new Point(x2, y1 + 3), new Point(x2 - 5, y1 + 6));
                        } if (mzyt.Bz == 2)
                        {
                            e.Graphics.FillPolygon(Brushes.Black, new Point[3] { new Point(x2, y1 + y), new Point(x2 - 3, y1 + 6 + y), new Point(x2 + 3, y1 + 6 + y) });
                        }
                    }
                    if (x1 > xStd + x && x1 < 650 + x && x2 > xStd + x && x2 < 650 + x)
                    {
                        e.Graphics.DrawLine(pred2, new Point(x1, y1 + y + 3), new Point(x2, y1 + y + 3));
                    }
                    if (x1 > xStd + x && x1 < 650 + x && x2 > 650 + x)
                    {
                        e.Graphics.DrawLine(pred2, new Point(x1, y1 + y + 3), new Point(650 + x, y1 + y + 3));
                    }
                    if (x1 < xStd + x && x2 > xStd + x && x2 < 650 + x)
                    {
                        e.Graphics.DrawLine(pred2, new Point(xStd + x, y1 + y + 3), new Point(x2, y1 + y + 3));
                    }
                    if (x1 < xStd + x && x2 > 650 + x)
                    {
                        e.Graphics.DrawLine(pred2, new Point(xStd + x, y1 + y + 3), new Point(650 + x, y1 + y + 3));
                    }
                }
                ydyi++;
                sssYDY.Add(mzyt.Name + "|" + mzyt.Yyfs);
            }
            #endregion

            #region 打印局麻药
            //int jti = 20;  //打印局麻药
            //ArrayList sssJMY = new ArrayList();
            //foreach (adims_MODEL.Yongyao jt in jmyList)
            //{
            //    if (sssJMY.Contains(jt.Name))
            //        jti = jti - 1;
            //    if (!sssJMY.Contains(jt.Name))
            //        e.Graphics.DrawString(jt.Name + " " + jt.Dw, jt.Name.Length < 7 ? ptzt7 : ptzt5, Brushes.Black, new PointF(37 + x, YY + jti * 12 + y + 2));

            //    TimeSpan t = new TimeSpan();
            //    t = jt.KsTime - pagetime;
            //    int x1 = (int)((t.Days * 24 * 60 + t.Hours * 60 + t.Minutes) * 9 / jcsjjg + 120);
            //    int y1 = YY + jti * 12 + 4;
            //    if (x1 > 120 + x && x1 < 780 + x)
            //    {
            //        e.Graphics.DrawString(jt.Yl.ToString(), ptzt7, Brushes.Blue, new Point(x1 + 3 + x, y + y1 - 6));
            //        e.Graphics.FillPolygon(Brushes.Black, new Point[3] { new Point(x1 + x, y1 + y), new Point(x1 - 3 + x, y1 + 6 + y), new Point(x1 + 3 + x, y1 + 6 + y) });
            //    }
            //    jti++;
            //    sssJMY.Add(jt.Name);
            //}
            #endregion

            #region 打印输液
            int syi = 10;
            ArrayList sssSY = new ArrayList();
            foreach (adims_MODEL.Yongyao sx in shuyeList)
            {
                // DataTable dtM = bll.addYongyaoListzling(mzjldID, sx.Name);
                // string bb = dtM.Rows[0][0].ToString();
                if (sssSY.Contains(sx.Name))
                    syi = syi - 1;
                if (!sssSY.Contains(sx.Name))
                    e.Graphics.DrawString(sx.Name + " " + sx.Dw, sx.Name.Length < 7 ? ptzt7 : ptzt7,
                        Brushes.Black, new PointF(37 + x, YY + syi * 12 + y + 3));

                if (sx.Cxyy == false)
                {
                    TimeSpan t = new TimeSpan();
                    t = sx.KsTime - pagetime;
                    int x1 = (int)((t.Days * 24 * 60 + t.Hours * 60 + t.Minutes) * 10 / jcsjjg + 170) + x;
                    int y1 = YY + syi * 12 + 4;
                    if (x1 > 100 + x && x1 < 650 + x)
                    {
                        e.Graphics.DrawString(sx.Yl.ToString() + sx.Yyfs.ToString(), ptzt7, Brushes.Blue, new Point(x1 + 3, y + y1 - 6));
                        e.Graphics.FillPolygon(Brushes.Black, new Point[3] { new Point(x1, y1 + y), new Point(x1 - 3, y1 + 6 + y), new Point(x1 + 3, y1 + 6 + y) });
                    }
                }
                if (sx.Cxyy == true)
                {
                    TimeSpan t = new TimeSpan();
                    TimeSpan t1 = new TimeSpan();
                    if (sx.Bz == 1)
                    {
                        t = sx.KsTime - pagetime;
                        if (ssjsTime > Convert.ToDateTime("1990-01-01"))
                        {
                            DataTable dtMaxs = bll.GetMaxPoint(mzjldID);
                            DateTime dtnows = new DateTime();
                            if (dtMax.Rows[0][0].ToString() != "")
                            {
                                dtnows = Convert.ToDateTime(dtMax.Rows[0][0]);
                                if (dtnows > ssjsTime)
                                {
                                    t1 = dtnows - pagetime;
                                }
                                else
                                {
                                    t1 = ssjsTime - pagetime;
                                }
                            }
                            else
                            {
                                t1 = ssjsTime - pagetime;
                            }
                        }
                        else
                        {
                            t1 = DateTime.Now - pagetime;
                        }
                    }
                    if (sx.Bz == 2)
                    {
                        t = sx.KsTime - pagetime;
                        t1 = sx.JsTime - pagetime;
                    }

                    int x1 = (int)((t.Days * 24 * 60 + t.Hours * 60 + t.Minutes) * 10 / jcsjjg + 170) + x;
                    int y1 = YY + syi * 12 + 4;
                    int x2 = (int)((t1.Days * 24 * 60 + t1.Hours * 60 + t1.Minutes) * 10 / jcsjjg + 170) + x;
                    if (x1 > xStd + x && x1 < 650 + x)
                    {
                        e.Graphics.DrawString(sx.Yl.ToString() + sx.Yyfs.ToString(), ptzt7, Brushes.Blue, new Point(x1 + 3, y + y1 - 6));
                        e.Graphics.FillPolygon(Brushes.Black, new Point[3] { new Point(x1, y1 + y), new Point(x1 - 3, y1 + 6 + y), new Point(x1 + 3, y1 + 6 + y) });
                    }
                    if (x2 > xStd + x && x2 < 650 + x)
                    {
                        if (sx.Bz == 1)
                        {
                            e.Graphics.DrawLine(pred2, new Point(x2, y1 + 3), new Point(x2 - 5, y1));
                            e.Graphics.DrawLine(pred2, new Point(x2, y1 + 3), new Point(x2 - 5, y1 + 6));
                        } if (sx.Bz == 2)
                        {
                            e.Graphics.FillPolygon(Brushes.Black, new Point[3] { new Point(x2, y1 + y), new Point(x2 - 3, y1 + 6 + y), new Point(x2 + 3, y1 + 6 + y) });
                        }
                    }
                    if (x1 > xStd + x && x1 < 650 + x && x2 > xStd + x && x2 < 650 + x)
                    {
                        e.Graphics.DrawLine(pred2, new Point(x1, y1 + y + 3), new Point(x2, y1 + y + 3));
                    }
                    if (x1 > xStd + x && x1 < 650 + x && x2 > 650 + x)
                    {
                        e.Graphics.DrawLine(pred2, new Point(x1, y1 + y + 3), new Point(650 + x, y1 + y + 3));
                    }
                    if (x1 < xStd + x && x2 > xStd + x && x2 < 650 + x)
                    {
                        e.Graphics.DrawLine(pred2, new Point(xStd + x, y1 + y + 3), new Point(x2, y1 + y + 3));
                    }
                    if (x1 < xStd + x && x2 > 650 + x)
                    {
                        e.Graphics.DrawLine(pred2, new Point(xStd + x, y1 + y + 3), new Point(650 + x, y1 + y + 3));
                    }
                }
                syi++;
                sssSY.Add(sx.Name);
                //if (sssSY.Contains(sx.Name))
                //    syi = syi - 1;
                //if (!sssSY.Contains(sx.Name))
                //    e.Graphics.DrawString(sx.Name + " " + sx.Dw, sx.Name.Length < 9 ? ptzt7 : ptzt5, Brushes.Black, new PointF(37 + x, YY + syi * 12 + y + 3));

                //TimeSpan t = new TimeSpan();
                //TimeSpan t1 = new TimeSpan();
                //t1 = pagetime.AddMinutes(60 * jcsjjg) - pagetime;
                //t = sx.KsTime - pagetime;
                ////e.Graphics.DrawString(sx.Name.ToString(), ptzt7, Brushes.Black, 37 + x, YY + syi * 12 + 2);
                //int x1 = (int)((t.Days * 24 * 60 + t.Hours * 60 + t.Minutes) * 9 / jcsjjg + 120);
                //int y1 = YY + syi * 12 + 5;
                //int x2 = (int)((t1.Days * 24 * 60 + t1.Hours * 60 + t1.Minutes) * 9 / jcsjjg + 120);

                //if (x1 > 120 + x && x1 < 780 + x)
                //{
                //    e.Graphics.DrawString(sx.Yl.ToString(), ptzt7, Brushes.Blue, x1 + x, y + y1 - 8);
                //    e.Graphics.FillPolygon(Brushes.Black, new Point[3] { new Point(x1 + x, y1 + y), 
                //        new Point(x1 - 3 + x, y1 + 5 + y), new Point(x1 + 3 + x, y1 + 5 + y) });
                //}
                //syi++;
                //sssSY.Add(sx.Name);
            }

            #endregion

            #region 打印输血
            //打印输血
            int sxi = syi;
            ArrayList sssSX = new ArrayList();
            foreach (adims_MODEL.Yongyao sx in shuxueList)
            {
                // DataTable dtM = bll.addYongyaoListzling(mzjldID, sx.Name);
                //    string bb = dtM.Rows[0][0].ToString();
                if (sssSX.Contains(sx.Name))
                    sxi = sxi - 1;
                if (!sssSX.Contains(sx.Name))
                    e.Graphics.DrawString(sx.Name + " " + sx.Dw, sx.Name.Length < 7 ? ptzt7 : ptzt7,
                        Brushes.Black, new PointF(37 + x, YY + sxi * 12 + y + 3));

                if (sx.Cxyy == false)
                {
                    TimeSpan t = new TimeSpan();
                    t = sx.KsTime - pagetime;
                    int x1 = (int)((t.Days * 24 * 60 + t.Hours * 60 + t.Minutes) * 10 / jcsjjg + 170) + x;
                    int y1 = YY + sxi * 12 + 4;
                    if (x1 > 100 + x && x1 < 650 + x)
                    {
                        e.Graphics.DrawString(sx.Yl.ToString() + sx.Yyfs.ToString(), ptzt7, Brushes.Blue, new Point(x1 + 3, y + y1 - 6));
                        e.Graphics.FillPolygon(Brushes.Black, new Point[3] { new Point(x1, y1 + y), new Point(x1 - 3, y1 + 6 + y), new Point(x1 + 3, y1 + 6 + y) });
                    }
                }
                if (sx.Cxyy == true)
                {
                    TimeSpan t = new TimeSpan();
                    TimeSpan t1 = new TimeSpan();
                    if (sx.Bz == 1)
                    {
                        t = sx.KsTime - pagetime;
                        if (ssjsTime > Convert.ToDateTime("1990-01-01"))
                        {
                            DataTable dtMaxs = bll.GetMaxPoint(mzjldID);
                            DateTime dtnows = new DateTime();
                            if (dtMax.Rows[0][0].ToString() != "")
                            {
                                dtnows = Convert.ToDateTime(dtMax.Rows[0][0]);
                                if (dtnows > ssjsTime)
                                {
                                    t1 = dtnows - pagetime;
                                }
                                else
                                {
                                    t1 = ssjsTime - pagetime;
                                }
                            }
                            else
                            {
                                t1 = ssjsTime - pagetime;
                            }
                        }
                        else
                        {
                            t1 = DateTime.Now - pagetime;
                        }
                    }
                    if (sx.Bz == 2)
                    {
                        t = sx.KsTime - pagetime;
                        t1 = sx.JsTime - pagetime;
                    }

                    int x1 = (int)((t.Days * 24 * 60 + t.Hours * 60 + t.Minutes) * 10 / jcsjjg + 170) + x;
                    int y1 = YY + sxi * 12 + 4;
                    int x2 = (int)((t1.Days * 24 * 60 + t1.Hours * 60 + t1.Minutes) * 10 / jcsjjg + 170) + x;
                    if (x1 > xStd + x && x1 < 650 + x)
                    {
                        e.Graphics.DrawString(sx.Yl.ToString(), ptzt7, Brushes.Blue, new Point(x1 + 3, y + y1 - 6));
                        e.Graphics.FillPolygon(Brushes.Black, new Point[3] { new Point(x1, y1 + y), new Point(x1 - 3, y1 + 6 + y), new Point(x1 + 3, y1 + 6 + y) });
                    }
                    if (x2 > xStd + x && x2 < 650 + x)
                    {
                        if (sx.Bz == 1)
                        {
                            e.Graphics.DrawLine(pred2, new Point(x2, y1 + 3), new Point(x2 - 5, y1));
                            e.Graphics.DrawLine(pred2, new Point(x2, y1 + 3), new Point(x2 - 5, y1 + 6));
                        } if (sx.Bz == 2)
                        {
                            e.Graphics.FillPolygon(Brushes.Black, new Point[3] { new Point(x2, y1 + y), new Point(x2 - 3, y1 + 6 + y), new Point(x2 + 3, y1 + 6 + y) });
                        }
                    }
                    if (x1 > xStd + x && x1 < 650 + x && x2 > xStd + x && x2 < 650 + x)
                    {
                        e.Graphics.DrawLine(pred2, new Point(x1, y1 + y + 3), new Point(x2, y1 + y + 3));
                    }
                    if (x1 > xStd + x && x1 < 650 + x && x2 > 650 + x)
                    {
                        e.Graphics.DrawLine(pred2, new Point(x1, y1 + y + 3), new Point(650 + x, y1 + y + 3));
                    }
                    if (x1 < xStd + x && x2 > xStd + x && x2 < 650 + x)
                    {
                        e.Graphics.DrawLine(pred2, new Point(xStd + x, y1 + y + 3), new Point(x2, y1 + y + 3));
                    }
                    if (x1 < xStd + x && x2 > 650 + x)
                    {
                        e.Graphics.DrawLine(pred2, new Point(xStd + x, y1 + y + 3), new Point(650 + x, y1 + y + 3));
                    }
                }
                sxi++;
                sssSX.Add(sx.Name);
                //if (sssSX.Contains(sx.Name))
                //    sxi = sxi - 1;
                //if (!sssSX.Contains(sx.Name))
                //    e.Graphics.DrawString(sx.Name + " " + sx.Dw, sx.Name.Length < 9 ? ptzt7 : ptzt5, Brushes.Black, new PointF(37 + x, YY + sxi * 12 + y + 3));

                //TimeSpan t = new TimeSpan();
                //TimeSpan t1 = new TimeSpan();
                //t1 = pagetime.AddHours(jcsjjg) - pagetime;
                //t = sx.KsTime - pagetime;
                ////e.Graphics.DrawString(sx.Name.ToString(), ptzt7, Brushes.Black, 37 + x, YY + sxi * 12 + 2);
                //int x1 = (int)((t.Days * 24 * 60 + t.Hours * 60 + t.Minutes) * 9 / jcsjjg + 120);
                //int y1 = YY + sxi * 12 + 5;
                //int x2 = (int)((t1.Days * 24 * 60 + t1.Hours * 60 + t1.Minutes) * 9 / jcsjjg + 120);
                //if (x1 > 120 + x && x1 < 780 + x)
                //{
                //    e.Graphics.DrawString(sx.Yl.ToString(), ptzt7, Brushes.Blue, x1 + x, y + y1 - 6);
                //    e.Graphics.FillPolygon(Brushes.Black, new Point[3] { new Point(x1 + x, y1 + y), 
                //        new Point(x1 - 3 + x, y1 + 5 + y), new Point(x1 + 3 + x, y1 + 5 + y) });
                //}
                //sxi++;
                //sssSX.Add(sx.Name);
            }
            #endregion

            #region<<打印失血>>
            e.Graphics.DrawString("失 血(ml)", ptzt7, Brushes.Black, x + 37, YY + 15 * 12 + y + 3);
            int cx_count = 0;
            foreach (adims_MODEL.clcxqt cx in cxList)
            {
                if (cx.V > 0)
                {
                    if (cx.D >= pagetime && cx.D <= pagetime.AddMinutes((9 * 6) * jcsjjg))
                    {
                        TimeSpan t = new TimeSpan();
                        t = cx.D - pagetime;
                        float jhx = (float)((t.Days * 24 * 60 + t.Hours * 60 + t.Minutes) * 9 / jcsjjg + 150);
                        float jhy = YY + 12 * 15;
                        //if (cx_count % 5 == 0)
                        {
                            if (cx.V.ToString().Length > 3)
                            {
                                e.Graphics.FillRectangle(Brushes.Pink, jhx - 3 + x, jhy, 16, 9);
                            }
                            else
                            {
                                e.Graphics.FillRectangle(Brushes.Pink, jhx - 3 + x, jhy, 9, 9);
                            }
                            e.Graphics.DrawString(cx.V.ToString(), cx.V.ToString().Length > 3 ? ptzt6 : ptzt7, Brushes.Black, new PointF(jhx - 4 + x, jhy));

                        }
                        cx_count++;
                    }
                }

            }
            #endregion
            e.Graphics.DrawString("引流量(ml)", ptzt7, Brushes.Black, x + 37, YY + 16 * 12 + y + 3);

            #region<<打印流量>>

            int cn_count = 0;
            foreach (adims_MODEL.clcxqt q in yllList)
            {
                if (q.V > 0)
                {
                    if (q.D >= pagetime && q.D <= pagetime.AddMinutes((9 * 6) * jcsjjg))
                    {
                        TimeSpan t = new TimeSpan();
                        t = q.D - pagetime;
                        float jhx = (float)((t.Days * 24 * 60 + t.Hours * 60 + t.Minutes) * 9 / jcsjjg + 150);
                        float jhy = YY + 16 * 12;
                        //if (cn_count % 5 == 0)
                        {
                            if (q.V.ToString().Length > 3)
                            {
                                e.Graphics.FillRectangle(Brushes.Pink, jhx - 3 + x, jhy, 16, 9);
                            }
                            else
                            {
                                e.Graphics.FillRectangle(Brushes.Pink, jhx - 3 + x, jhy, 9, 9);
                            }
                            e.Graphics.DrawString(q.V.ToString(), q.V.ToString().Length > 3 ? ptzt6 : ptzt7, Brushes.Black, new PointF(jhx - 4 + x, jhy));

                        }
                        cn_count++;
                    }
                }

            }
            #endregion
            e.Graphics.DrawString("尿量(ml)", ptzt7, Brushes.Black, x + 37, YY + 17 * 12 + y + 3);

            #region<<打尿量>>

            int nl_count = 0;
            foreach (adims_MODEL.clcxqt cl in cnList)
            {
                if (cl.V > 0)
                {
                    if (cl.D >= pagetime && cl.D <= pagetime.AddMinutes((9 * 6) * jcsjjg))
                    {
                        TimeSpan t = new TimeSpan();
                        t = cl.D - pagetime;
                        float jhx = (float)((t.Days * 24 * 60 + t.Hours * 60 + t.Minutes) * 9 / jcsjjg + 150);
                        float jhy = YY + 17 * 12;
                        //if (nl_count % 5 == 0)
                        {
                            if (cl.V.ToString().Length > 3)
                            {
                                e.Graphics.FillRectangle(Brushes.Pink, jhx - 3 + x, jhy, 16, 9);
                            }
                            else
                            {
                                e.Graphics.FillRectangle(Brushes.Pink, jhx - 3 + x, jhy, 9, 9);
                            }
                            e.Graphics.DrawString(cl.V.ToString(), cl.V.ToString().Length > 3 ? ptzt6 : ptzt7, Brushes.Black, new PointF(jhx - 4 + x, jhy));

                        }
                        nl_count++;
                    }
                }

            }
            #endregion

            ////aaaaaaaaaaa
            #region  打印监护项目区域

            YY = YY + 12 * 18;
            //e.Graphics.DrawString("\n检\n测\n项\n目", ptzt8, Brushes.Black, new Point(20 + x, YY + 5));
            for (int i = 0; i < 7; i++)//画横实线 
            {
                if (i == 0)
                    e.Graphics.DrawLine(ptp, new Point(20 + x, YY + 12 * i), new Point(650 + x, YY + 12 * i + y));
                else if (i == 6)

                    e.Graphics.DrawLine(pblack2, new Point(20 + x, YY + 12 * i), new Point(650 + x, YY + 12 * i + y));
                else
                    e.Graphics.DrawLine(ptp, new Point(35 + x, YY + 12 * i), new Point(650 + x, YY + 12 * i + y));

            }
            for (int i = 0; i < 17; i++)//画竖实线
                e.Graphics.DrawLine(ptp, new Point(xStd + x + 30 * i, YY - 2 + y), new Point(xStd + x + 30 * i, YY + 6 * 12 + y));

            e.Graphics.DrawLine(ptp, new Point(35 + x, YY - 2 + y), new Point(35 + x, YY + 6 * 12 + y));

            for (int i = 1; i < 48; i++)//画竖虚线
                e.Graphics.DrawLine(pxuxian, new Point(xStd + x + 10 * i, YY + y), new Point(xStd + x + 10 * i, YY + 6 * 12 + y));


            #endregion

            //e.Graphics.DrawLine(ptp, new Point(x + 500, SZYY + y), new Point(x + 500, YY + 6 * 12 + y));
            #region 打印监护项目

            #region  //打印ETCO2
            //px = 0; py = 0;
            //foreach (adims_MODEL.point p in etco2List)
            //{
            //    if (p.D >= pagetime && p.D <= pagetime.AddMinutes(60 * jcsjjg))
            //    {
            //        TimeSpan t = new TimeSpan();
            //        t = p.D - pagetime;
            //        float pointx = (float)((t.Days * 24 * 60 + t.Hours * 60 + t.Minutes) * 11 / jcsjjg + 120);
            //        float pointy = 0;
            //        if (p.V > 230)
            //        {
            //            pointy = (float)((20) * 1 + YY);
            //            e.Graphics.DrawString(p.V.ToString(), ptzt7, Brushes.Blue, pointx + x, pointy + y);
            //        }
            //        else
            //            pointy = (float)((240 - p.V) * 1 + YY);

            //        e.Graphics.DrawPolygon(Pens.DarkOrange, new PointF[3] { new PointF(pointx+ x, pointy+ y), 
            //                           new PointF(pointx - 3+ x, pointy - 5+ y), new PointF(pointx + 3+ x, pointy - 5+ y) });
            //        // e.Graphics.FillPolygon(Brushes.Green, new PointF[3] { new PointF(pointx+ x, pointy+ y), 
            //        //         new PointF(pointx + 3+ x, pointy + 6+ y), new PointF(pointx - 3+ x, pointy + 6+ y) });

            //        if (px != 0)
            //            e.Graphics.DrawLine(Pens.DarkOrange, new PointF(px + x, py + y), new PointF(pointx + x, pointy + y));

            //        px = pointx;
            //        py = pointy;
            //    }
            //}

            #endregion

            #region 打印监护项目
            int jhi = 0;
            foreach (string jc in jhxmIn)
            {
                e.Graphics.DrawString(jc, ptzt7, Brushes.Black, new PointF(35 + x, YY + jhi * 12 + y));
                int count1 = 0;
                foreach (adims_MODEL.jhxm j in jhxmValue)
                {
                    if (jc == j.Sy && j.V != 0)
                    {
                        if (j.D >= pagetime && j.D <= pagetime.AddMinutes((9 * 6) * jcsjjg))
                        {
                            TimeSpan t = new TimeSpan();
                            t = j.D - pagetime;

                            float jhx = (float)((t.Days * 24 * 60 + t.Hours * 60 + t.Minutes) * 9 / jcsjjg + 150);
                            float jhy = YY + jhi * 12;
                            if (count1 % 2 == 0)
                            {
                                //if (CGUAN && !BGUAN && j.Sy == "ETCO2")
                                //{
                                //    if (cgTime < j.D)
                                //    {
                                //        e.Graphics.FillRectangle(Brushes.Pink, jhx - 3 + x, jhy, 9, 8);
                                //        e.Graphics.DrawString(j.V.ToString(), j.V > 99 ? ptzt6 : ptzt7, Brushes.Black, new PointF(jhx - 4 + x, jhy));
                                //    }
                                //}
                                //if (CGUAN && BGUAN && j.Sy == "ETCO2")
                                //{
                                //    if (cgTime < j.D && j.D < bgTime)
                                //    {
                                //        e.Graphics.FillRectangle(Brushes.Pink, jhx - 3 + x, jhy, 9, 8);
                                //        e.Graphics.DrawString(j.V.ToString(), j.V > 99 ? ptzt6 : ptzt7, Brushes.Black, new PointF(jhx - 4 + x, jhy));
                                //    }
                                //}
                                //else if (j.Sy != "ETCO2")
                                //{
                                e.Graphics.FillRectangle(Brushes.Pink, jhx - 3 + x, jhy, 9, 9);
                                e.Graphics.DrawString(j.V.ToString(), j.V > 99 ? ptzt5 : ptzt6, Brushes.Black, new PointF(jhx - 4 + x, jhy));
                                //}

                            }
                            count1++;
                        }
                    }
                }
                jhi++;

            }
            ///打印显示体温
            //jhi++;
            int tw_count = 0;
            if (checkBoxtw.Checked == false)
            {
                e.Graphics.DrawString("体温", ptzt7, Brushes.Black, new PointF(35 + x, YY + jhi * 12 + y));
                foreach (adims_MODEL.tw_point p in twList)
                {
                    if (p.V > 0)
                    {
                        if (p.D >= pagetime && p.D <= pagetime.AddMinutes((9 * 6) * jcsjjg))
                        {
                            TimeSpan t = new TimeSpan();
                            t = p.D - pagetime;
                            float jhx = (float)((t.Days * 24 * 60 + t.Hours * 60 + t.Minutes) * 9 / jcsjjg + 150);
                            float jhy = YY + jhi * 12;
                            if (tw_count % 5 == 0)
                            {
                                if (p.V.ToString().Length > 3)
                                {
                                    e.Graphics.FillRectangle(Brushes.Pink, jhx - 3 + x, jhy, 16, 9);
                                }
                                else
                                {
                                    e.Graphics.FillRectangle(Brushes.Pink, jhx - 3 + x, jhy, 9, 9);
                                }
                                e.Graphics.DrawString(p.V.ToString(), p.V.ToString().Length > 3 ? ptzt6 : ptzt7, Brushes.Black, new PointF(jhx - 4 + x, jhy));

                            }
                            tw_count++;
                        }
                    }
                }
            }
            //foreach (adims_MODEL.jhxm j in jhxmValue)
            //{
            //    if (j.Sy == "SpO2" && j.V != 0)
            //    {
            //        if (j.D >= pagetime && j.D <= pagetime.AddMinutes(60 * jcsjjg))
            //        {
            //            TimeSpan t = new TimeSpan();
            //            t = j.D - pagetime;
            //            float jhx = (float)((t.Days * 24 * 60 + t.Hours * 60 + t.Minutes) * 11 / jcsjjg + 115);
            //            float jhy = YY + jhi * 12 + y + 2;
            //            if (spo2Count % 2 == 0)
            //            {
            //                e.Graphics.FillRectangle(Brushes.Pink, jhx - 3 + x, jhy, 9, 8);
            //                e.Graphics.DrawString(j.V.ToString(), j.V > 99 ? ptzt5 : ptzt7, Brushes.Black, new PointF(jhx - 4 + x, jhy));
            //            }
            //        }
            //    }
            //    spo2Count++;
            //}

            #endregion
            #endregion

            //e.Graphics.DrawLine(ptp, new Point(x + 500, SZYY + y), new Point(x + 500, YY + 6 * 12 + y));

            #region//打印检测区域格子。血压体温等区域↓
            YY = YY + 12 * 6;
            e.Graphics.DrawLine(ptp, new Point(35 + x, YY), new Point(35 + x, YY + 10 * 26));
            e.Graphics.DrawString("术\n\n中\n\n监\n\n测", ptzt8, Brushes.Black, new Point(21 + x, YY + 60));
            for (int i = 0; i < 14; i++)//画横实线   
                if (i == 13)
                {
                    e.Graphics.DrawLine(pblack2, new Point(x + 35, YY + 20 * i), new Point(650 + x, YY + 20 * i + y));
                }
                else
                    e.Graphics.DrawLine(ptp, new Point(xStd + x, YY + 20 * i), new Point(650 + x, YY + 20 * i + y));

            for (int i = 0; i < 13; i++)//画横虚线
                e.Graphics.DrawLine(pxuxian, xStd + x, YY + 20 * i + 10, 650 + x, YY + 20 * i + y + 10);

            for (int i = 0; i < 17; i++)//画竖实线
            {
                e.Graphics.DrawLine(ptp, new Point(170 + 30 * i + x, YY + y), new Point(170 + 30 * i + x, YY + 10 * 26 + y));
            }
            for (int i = 0; i < 17; i++)//画竖实线
            {
                e.Graphics.DrawLine(pblack2, new Point(170 + 30 * i + x, YY + y), new Point(170 + 30 * i + x, YY + 10 * 26 + y));
                i++;
            }
            for (int i = 1; i < 48; i++)//画竖虚线
            {
                e.Graphics.DrawLine(pxuxian, new Point(170 + 10 * i + x, YY + y), new Point(170 + 10 * i + x, YY + 10 * 26 + y));
            }
            for (int i = 1; i < 13; i++)
                e.Graphics.DrawString((260 - i * 20).ToString(), ptzt7, Brushes.Black, new PointF(115 + x, YY + (float)20 * i + y - 5));
            for (int i = 1; i < 13; i++)
                e.Graphics.DrawString((41 - i * 1).ToString(), ptzt7, Brushes.Black, new PointF(95 + x, YY + (float)20 * i + y - 5));
            //for (int i = 1; i < 12; i++)
            //    e.Graphics.DrawString((42 - i * 2).ToString(), ptzt7, Brushes.Black, new PointF(660 + x, YY + (float)20 * i + y - 5));

            e.Graphics.DrawString("∨收缩压", ptzt7, Brushes.Red, new Point(40 + x, YY + 40));
            e.Graphics.DrawString("∧舒张压", ptzt7, Brushes.Red, new Point(40 + x, YY + 55));
            e.Graphics.DrawString("●脉  搏", ptzt7, Brushes.Blue, new Point(40 + x, YY + 70));
            e.Graphics.DrawString("○呼  吸", ptzt7, Brushes.DarkCyan, new Point(40 + x, YY + 85));
            e.Graphics.DrawString("  机械通气", ptzt7, Brushes.DarkCyan, new Point(45 + x, YY + 100));
            this.PaintSignMBreath2(e.Graphics, new PointF(45 + x, YY + 100));
            //Image hxImage = Properties.Resources.CG;
            //e.Graphics.DrawImage(hxImage, new Rectangle(43 + x, YY + 100, 9, 9));
            e.Graphics.DrawString("Ⅹ麻醉开始", ptzt7, Brushes.Black, new Point(40 + x, YY + 115));
            e.Graphics.DrawString("  插  管", ptzt7, Brushes.Black, new Point(40 + x, YY + 130));
            Image cgImage = Properties.Resources.CG;
            e.Graphics.DrawImage(cgImage, new Rectangle(43 + x, YY + 130, 9, 9));
            e.Graphics.DrawString("  拔  管", ptzt7, Brushes.Black, new Point(40 + x, YY + 145));
            Image BgImage = Properties.Resources.BG;
            e.Graphics.DrawImage(BgImage, new Rectangle(43 + x, YY + 145, 9, 9));
            e.Graphics.DrawString("⊙手术开始", ptzt7, Brushes.Black, new Point(40 + x, YY + 160));
            e.Graphics.DrawString("  手术结束", ptzt7, Brushes.Black, new Point(40 + x, YY + 175));
            Image ssjsImage = Properties.Resources.SSJS;
            e.Graphics.DrawImage(ssjsImage, new Rectangle(43 + x, YY + 175, 9, 9));
            //e.Graphics.DrawString("  体  温", ptzt7, Brushes.DarkRed, new Point(40 + x, YY + 160));
            //e.Graphics.DrawString("  ETCO2", ptzt7, Brushes.DarkOrange, new Point(40 + x, YY + 175));
            #endregion

            #region  //打印收缩压
            float px = 0, py = 0;
            Pen p_red2 = new Pen(Brushes.Red, 2);
            if (checkBoxssy.Checked == false)
            {
                foreach (adims_MODEL.point p in ssyList)
                {
                    if (p.D >= pagetime && p.D <= pagetime.AddMinutes(8 * 6 * jcsjjg))
                    {
                        TimeSpan t = new TimeSpan();
                        t = p.D - pagetime;
                        float pointx = (float)((t.Days * 24 * 60 + t.Hours * 60 + t.Minutes) * 10 / jcsjjg + 170);
                        float pointy = 0;
                        if (p.V > 250)
                        {
                            pointy = (float)((20) * 0.3 + YY);
                            e.Graphics.DrawString(p.V.ToString(), ptzt6, Brushes.Blue, pointx + x, pointy + y);
                        }
                        else
                            pointy = (float)((260 - p.V) * 1 + YY);
                        e.Graphics.DrawLines(p_red2, new PointF[3] { new PointF(pointx + 3 + x, pointy + 5 + y), new PointF(pointx + x, pointy + y), new PointF(pointx - 3 + x, pointy + 5 + y) });

                        if (px != 0)
                            e.Graphics.DrawLine(Pens.Red, new PointF(px + x, py + y), new PointF(pointx + x, pointy + y));

                        px = pointx;
                        py = pointy;
                    }

                }
            }
            #endregion

            #region  //打印舒张压
            px = 0; py = 0;
            if (checkBoxshuzy.Checked == false)
            {
                foreach (adims_MODEL.point p in szyList)
                {
                    if (p.D >= pagetime && p.D <= pagetime.AddMinutes(8 * 6 * jcsjjg))
                    {
                        TimeSpan t = new TimeSpan();
                        t = p.D - pagetime;
                        float pointx = (float)((t.Days * 24 * 60 + t.Hours * 60 + t.Minutes) * 10 / jcsjjg + 170);
                        //float pointy = (float)((220 - p.V) * 1 + 460);
                        float pointy = 0;
                        if (p.V > 250)
                        {
                            pointy = (float)((20) * 0.3 + YY);
                            e.Graphics.DrawString(p.V.ToString(), ptzt6, Brushes.Blue, pointx + x, pointy + y);
                        }
                        else
                            pointy = (float)((260 - p.V) * 1 + YY);
                        e.Graphics.DrawLines(p_red2, new PointF[3] { new PointF(pointx - 3 + x, pointy - 5 + y), new PointF(pointx + x, pointy + y), new PointF(pointx + 3 + x, pointy - 5 + y) });
                        if (px != 0)
                            e.Graphics.DrawLine(Pens.Red, new PointF(px + x, py + y), new PointF(pointx + x, pointy + y));

                        px = pointx;
                        py = pointy;
                    }
                }
            }

            #endregion

            #region  //打印脉搏
            px = 0; py = 0;
            if (checkBoxmb.Checked == false)
            {
                foreach (adims_MODEL.point p in mboList)
                {
                    if (p.D >= pagetime && p.D <= pagetime.AddMinutes(8 * 6 * jcsjjg))
                    {
                        TimeSpan t = new TimeSpan();
                        t = p.D - pagetime;
                        float pointx = (float)((t.Days * 24 * 60 + t.Hours * 60 + t.Minutes) * 10 / jcsjjg + xStd + x);
                        //float pointy = (float)((220 - p.V) * 1 + 460);
                        float pointy = 0;
                        if (p.V > 250)
                        {
                            pointy = (float)((20) * 0.3 + YY + y);
                            e.Graphics.DrawString(p.V.ToString(), ptzt6, Brushes.Blue, pointx, pointy);
                        }
                        else
                            pointy = (float)((260 - p.V) * 1 + YY);
                        e.Graphics.FillEllipse(Brushes.Blue, pointx - 2, pointy - 2, 3, 3);
                        if (px != 0)
                            e.Graphics.DrawLine(Pens.Blue, new PointF(px, py), new PointF(pointx, pointy));
                        px = pointx;
                        py = pointy;
                    }
                }
            }
            #endregion

            #region  //打印ETCO2
            //px = 0; py = 0;
            //foreach (adims_MODEL.point p in etco2List)
            //{
            //    if (p.D >= pagetime && p.D <= pagetime.AddMinutes(60 * jcsjjg))
            //    {
            //        TimeSpan t = new TimeSpan();
            //        t = p.D - pagetime;
            //        float pointx = (float)((t.Days * 24 * 60 + t.Hours * 60 + t.Minutes) * 8 / jcsjjg + 170);
            //        //float pointy = (float)((220 - p.V) * 1 + 460);
            //        float pointy = 0;
            //        if (p.V > 250)
            //        {
            //            pointy = (float)((20) * 0.2 + YY);
            //            e.Graphics.DrawString(p.V.ToString(), ptzt6, Brushes.Blue, pointx + x, pointy + y);
            //        }
            //        else
            //            pointy = (float)((260 - p.V) * 0.8 + YY);
            //        e.Graphics.DrawPolygon(Pens.DarkOrange, new PointF[3] { new PointF(pointx+ x, pointy+ y), 
            //                           new PointF(pointx - 3+ x, pointy - 5+ y), new PointF(pointx + 3+ x, pointy - 5+ y) });
            //        if (px != 0)
            //            e.Graphics.DrawLine(Pens.DarkOrange, new PointF(px + x, py + y), new PointF(pointx + x, pointy + y));
            //        px = pointx;
            //        py = pointy;
            //    }
            //}
            #endregion

            #region  //打印体温
            //px = 0; py = 0;
            //foreach (adims_MODEL.tw_point p in twList)
            //{
            //    if (p.V > 0)
            //    {
            //        if (p.D >= pagetime && p.D <= pagetime.AddMinutes((8 * 6 - 3) * jcsjjg))
            //        {
            //            TimeSpan t = new TimeSpan();
            //            t = p.D - pagetime;
            //            float pointx = (float)((t.Days * 24 * 60 + t.Hours * 60 + t.Minutes) * 8 / jcsjjg + 170);
            //            //float pointy = (float)((220 - p.V) * 1 + 460);
            //            float pointy = 0;
            //            if (p.V > 41)
            //            {
            //                pointy = (float)((20) *0.2+ YY);
            //                e.Graphics.DrawString(p.V.ToString(), ptzt6, Brushes.Blue, pointx + x, pointy + y);

            //            }
            //            else
            //                pointy = (float)((41 - p.V) * 16+ YY);
            //            e.Graphics.DrawPolygon(Pens.Maroon, new PointF[3] { new PointF(pointx - 3 + x, pointy + 5 + y), new PointF(pointx + x, pointy + y), new PointF(pointx + 3 + x, pointy + 5 + y) });
            //            //e.Graphics.FillEllipse(Pens.Maroon, pointx + x - 2, pointy + y - 2, 5, 5);
            //            if (px != 0)
            //                e.Graphics.DrawLine(Pens.Maroon, new PointF(px + x, py + y), new PointF(pointx + x, pointy + y));

            //            px = pointx;
            //            py = pointy;
            //        }
            //    }
            //}
            #endregion

            #region  //打印呼吸
            px = 0; py = 0; int phuxi = 0;
            if (checkBoxhx.Checked == false)
            {
                string fxs = "";
                string tvxs = "";
                DataTable dtMZ_Info = bll.SelectOldPatInfo(mzjldID);

                if (dtMZ_Info.Rows.Count > 0)
                {
                    if (this.toStr(dtMZ_Info.Rows[0]["jkvalue"]) != "")
                    {
                        fxs = dtMZ_Info.Rows[0]["jkvalue"].ToString();
                    }
                    if (this.toStr(dtMZ_Info.Rows[0]["fzvalue"]) != "")
                    {
                        tvxs = dtMZ_Info.Rows[0]["fzvalue"].ToString();
                    }
                }
                int dowa_sb = 0;
                foreach (adims_MODEL.point p in hxlList)
                {
                    if (p.D >= pagetime && p.D <= pagetime.AddMinutes(8 * 6 * jcsjjg))
                    {
                        TimeSpan t = new TimeSpan();
                        t = p.D - pagetime;
                        float pointx = (float)((t.Days * 24 * 60 + t.Hours * 60 + t.Minutes) * 10 / jcsjjg + 170) + x;
                        float pointy = 0;
                        if (p.V > 250)
                        {
                            pointy = (float)((20) * 1 + YY) + y;
                            e.Graphics.DrawString(p.V.ToString(), ptzt6, Brushes.Blue, pointx, pointy);
                        }
                        else
                            pointy = (float)((260 - p.V) * 1 + YY) + y;
                        if (jkksTime < p.D && p.D < jkjsTime)
                        {
                            //float xPlus = pointx - px; // 描点作图
                            //PointF p1 = new PointF(px, py);
                            //PointF p2 = new PointF(pointx - 2 * xPlus / 3, pointy + 6);
                            //PointF p3 = new PointF(pointx - xPlus / 3, pointy - 6);
                            //PointF p4 = new PointF(pointx, pointy);
                            //e.Graphics.DrawBezier(Pens.DarkCyan, p1, p2, p3, p4);
                            this.PaintSignMBreath2(e.Graphics, new PointF(pointx - 2, pointy - 6));
                            if (dowa_sb == 0)
                            {
                                e.Graphics.DrawString("TV" + tvxs + "f" + fxs, this.Font, Brushes.DarkCyan, pointx - 2, pointy - 13);

                                dowa_sb++;
                            }
                            //e.Graphics.DrawString("C", ptzt6, Brushes.DarkCyan, pointx - 2, pointy - 3);
                        }
                        else if (fzksTime < p.D && p.D < fzjsTime)
                        {
                            e.Graphics.DrawString("A", ptzt6, Brushes.DarkCyan, pointx - 2, pointy - 3);
                        }
                        else
                            e.Graphics.DrawEllipse(Pens.DarkCyan, pointx - 2, pointy - 2, 5, 5);
                        //if (px != 0 && (jkksTime > p.D || jkjsTime < p.D))
                        if (px != 0)
                            e.Graphics.DrawLine(Pens.DarkCyan, new PointF(px, py), new PointF(pointx, pointy));
                        px = pointx;
                        py = pointy;
                    }
                }
            }
            #endregion
            //↓标记区域
            YY = YY + 10 * 26;
            int BJYY = YY;
            e.Graphics.DrawLine(ptp, new Point(20 + x, YY), new Point(500 + x, YY));
            e.Graphics.DrawString("标注", ptzt8, Brushes.Black, new Point(25 + x, YY + 3));
            #region 打印麻醉，手术，插管
            if (ssksTime >= pagetime && ssksTime <= pagetime.AddMinutes(8 * 6 * jcsjjg))
            {
                TimeSpan T = ssksTime - pagetime;
                int xxx = (int)((T.Days * 24 * 60 + T.Hours * 60 + T.Minutes) * 10 / jcsjjg + xStd + x - 5);
                e.Graphics.DrawString("⊙", ptzt8, Brushes.Black, xxx, YY + 3);
            }
            if (ssjsTime >= pagetime && ssjsTime <= pagetime.AddMinutes(8 * 6 * jcsjjg))
            {
                TimeSpan T = ssjsTime - pagetime;
                int xxx = (int)((T.Days * 24 * 60 + T.Hours * 60 + T.Minutes) * 10 / jcsjjg + xStd + x - 5);
                Image newImage = Properties.Resources.SSJS;
                e.Graphics.DrawImage(newImage, new Rectangle(xxx, YY + 3, 10, 10));
            }
            if (mzksTime >= pagetime && mzksTime <= pagetime.AddMinutes(8 * 6 * jcsjjg))
            {
                TimeSpan T = mzksTime - pagetime;
                int xxx = (int)((T.Days * 24 * 60 + T.Hours * 60 + T.Minutes) * 10 / jcsjjg + xStd + x - 5);
                e.Graphics.DrawString("Χ", ptzt8, Brushes.Black, xxx, YY + 3);
            }
            if (mzjsTime >= pagetime && mzjsTime <= pagetime.AddHours(jcsjjg))
            {
                TimeSpan T = mzjsTime - pagetime;
                int xxx = (int)((T.Days * 24 * 60 + T.Hours * 60 + T.Minutes) * 10 / jcsjjg + xStd + x - 5);
                e.Graphics.DrawString("Χ", ptzt8, Brushes.Black, xxx, YY + 3);
            }
            if (cgTime >= pagetime && cgTime <= pagetime.AddMinutes(8 * 6 * jcsjjg))
            {
                TimeSpan T = cgTime - pagetime;
                int xxx = (int)((T.Days * 24 * 60 + T.Hours * 60 + T.Minutes) * 10 / jcsjjg + xStd + x - 5);
                Image newImage = Properties.Resources.CG;
                e.Graphics.DrawImage(newImage, new Rectangle(xxx, YY + 3, 10, 10));
            }
            if (bgTime >= pagetime && bgTime <= pagetime.AddMinutes(8 * 6 * jcsjjg))
            {
                TimeSpan T = bgTime - pagetime;
                int xxx = (int)((T.Days * 24 * 60 + T.Hours * 60 + T.Minutes) * 10 / jcsjjg + xStd + x - 5);
                Image newImage = Properties.Resources.BG;
                e.Graphics.DrawImage(newImage, new Rectangle(xxx, YY + 3, 10, 10));
            }

            #endregion



            #region 打印出血出尿
            //Pen dakred2 = new Pen(Brushes.DarkRed, 2);
            //if (tbChuNiao.Text.Trim() == "")
            //    tbChuNiao.Text = " 0";
            //int yyyy = YY + 32 * 12 + 1;
            //e.Graphics.DrawString("出尿：" + tbChuNiao.Text, ht7, Brushes.DarkRed, new Point(700 + x, yyyy));
            //e.Graphics.DrawLine(dakred2, new Point(725 + x, yyyy + 11), new Point(766 + x, yyyy + 11));
            //e.Graphics.DrawString("ml", ht7, Brushes.Black, new Point(765 + x, yyyy));
            //yyyy = yyyy + 12;
            //if (tbChuxue.Text.Trim() == "")
            //    tbChuxue.Text = " 0";
            //e.Graphics.DrawString("出血：" + tbChuxue.Text, ht7, Brushes.DarkRed, new Point(700 + x, yyyy));
            //e.Graphics.DrawLine(dakred2, new Point(725 + x, yyyy + 11), new Point(766 + x, yyyy + 11));
            //e.Graphics.DrawString("ml", ht7, Brushes.Black, new Point(765 + x, yyyy));

            #endregion

            //aaaaaaaa
            #region 打印下部分的内容
            #region 术中事件 和其他用药

            YY = YY + 12 * 2;
            int sz_yy = YY;
            //画表格
            e.Graphics.DrawLine(ptp, new Point(20 + x, YY), new Point(650 + x, YY));
            e.Graphics.DrawLine(ptp, new Point(x + 35, sz_yy + y), new Point(x + 35, sz_yy + 7 * 15 + y));
            e.Graphics.DrawLine(ptp, new Point(x + 170 + 200, sz_yy + y), new Point(x + 170 + 200, sz_yy + 7 * 15 + y));
            e.Graphics.DrawLine(ptp, new Point(x + 170 + 215, sz_yy + y), new Point(x + 170 + 215, sz_yy + 7 * 15 + y));
            e.Graphics.DrawLine(ptp, new Point(x + 20, sz_yy + 7 * 15 + y), new Point(x + 650, sz_yy + 7 * 15 + y));
            e.Graphics.DrawString("术\n中\n事\n件\n・\n上", ptzt9, Brushes.Black, new Point(20 + x, sz_yy + 20));
            e.Graphics.DrawString("特\n殊\n用\n药\n・\n下", ptzt9, Brushes.Black, new Point(x + 170 + 200, sz_yy + 20));
            int szi = 1;
            int szi1 = 1;
            string szss1 = "";
            //显示事件标记
            foreach (adims_MODEL.szsj sz in szsjList)
            {
                if (sz.D >= pagetime && sz.D <= pagetime.AddMinutes(8 * 6 * jcsjjg))
                {
                    TimeSpan t = new TimeSpan();
                    t = sz.D - pagetime;
                    float tx = (float)((t.Days * 24 * 60 + t.Hours * 60 + t.Minutes) * 10 / jcsjjg + 170) + x;
                    e.Graphics.FillRectangle(Brushes.Pink, tx - 3, BJYY + 8 + (sz.Y_zb - 315), 9, 9);
                    e.Graphics.DrawString(szi.ToString(), ptzt7, Brushes.Black, new PointF(tx - 3, BJYY + 8 + (sz.Y_zb - 315)));
                    szi++;
                }

            }
            //显示事件的类容
            foreach (adims_MODEL.szsj sz in szsjList)
            {
                if (szi1 > 14)
                {
                    break;
                }
                szss1 = szi1.ToString() + "." + sz.Name + " " + sz.D.ToString("HH:mm") + "\n";
                if (szi1 > 7)
                {
                    e.Graphics.DrawString(szss1, ptzt6, Brushes.Black, new PointF(xStd + x + 35, sz_yy + 2 + (szi1 - 8) * 14));
                }
                else
                {

                    e.Graphics.DrawString(szss1, ptzt6, Brushes.Black, new PointF(35 + x + 5, sz_yy + 2 + (szi1 - 1) * 14));
                }

                szi1++;
            }

            //显示其他用药
            int tsi = 1;
            int tsi1 = 1;
            string tss1 = "";
            foreach (adims_MODEL.Yongyao ts in tsyyList)
            {
                if (ts.KsTime >= pagetime && ts.KsTime <= pagetime.AddMinutes(8 * 6 * jcsjjg))
                {
                    TimeSpan t = new TimeSpan();
                    t = ts.KsTime - pagetime;
                    float tx = (float)((t.Days * 24 * 60 + t.Hours * 60 + t.Minutes) * 10 / jcsjjg + 170) + x;
                    //e.Graphics.FillEllipse(Brushes.LightGreen, tx - 3, BJYY + 3 + (ts.Y_zb - 370), 10, 9);
                    e.Graphics.DrawString(tsi.ToString(), ptzt7, Brushes.Blue, new PointF(tx - 3, BJYY + 3 + (ts.Y_zb - 370)));
                    tsi++;
                }
            }
            foreach (adims_MODEL.Yongyao ts in tsyyList)
            {
                if (tsi1 > 14)
                {
                    break;
                }
                //string zsfs = "";//注射方式
                // if (ts.Yyfs == "口服")
                //{
                //    zsfs = "po";
                //}
                //if (ts.Yyfs == "静脉滴注")
                //{
                //    zsfs = "ivdrip";
                //}
                //if (ts.Yyfs == "皮下注射")
                //{
                //    zsfs = "ih";
                //}
                //if (ts.Yyfs == "肌肉注射")
                //{
                //    zsfs = "im";
                //}
                //if (ts.Yyfs == "静脉注射")
                //{
                //    zsfs = "iv";
                //}
                //if (ts.Yyfs == "皮下注射")
                //{
                //    zsfs = "id";
                //}
                tss1 = tsi1.ToString() + "." + ts.Name + "" + ts.Yl + "" + ts.Dw + " " + ts.Yyfs + " " + ts.KsTime.ToString("HH:mm") + "\n";
                if (tsi1 > 7)
                {
                    e.Graphics.DrawString(tss1, ptzt6, Brushes.Black, new PointF(xStd + x + 355, sz_yy + 2 + (tsi1 - 8) * 14));
                }
                else
                {

                    e.Graphics.DrawString(tss1, ptzt6, Brushes.Black, new PointF(xStd + x + 220, sz_yy + 2 + (tsi1 - 1) * 14));
                }

                tsi1++;
            }
            #endregion
            #endregion

            #region 打印尾部区域↓
            YY = YY + 15 * 7;
            int y_weibu = YY; //尾部开始位置Y坐标
            int jisuan_yy = YY;
            y_weibu = y_weibu + 5; Y_unLine = y_weibu + 13;

            e.Graphics.DrawString("术中诊断 " + txtSZZD.Controls[0].Text, ptzt8, Brushes.Black, x + 25, y_weibu);
            e.Graphics.DrawLine(ptp, new Point(70 + x, Y_unLine), new Point(350 + x, Y_unLine));
            if (txtSZZD.Controls[0].Text == "")
            {
                e.Graphics.DrawLine(ptp, new Point(80 + x, Y_unLine), new Point(270 + x, y_weibu + 2));
            }
            e.Graphics.DrawString("手术开始时间 " + xianshisskaishiss.Text, ptzt8, Brushes.Black, x + 350, y_weibu);
            y_weibu = y_weibu + 20; Y_unLine = y_weibu + 13;
            e.Graphics.DrawString("实施手术 " + txtSSSS.Controls[0].Text, ptzt8, Brushes.Black, x + 25, y_weibu);
            e.Graphics.DrawLine(ptp, new Point(70 + x, Y_unLine), new Point(350 + x, Y_unLine));
            e.Graphics.DrawString("手术结束时间 " + shoushujissj.Text, ptzt8, Brushes.Black, x + 350, y_weibu);
            y_weibu = y_weibu + 20; Y_unLine = y_weibu + 13;
            e.Graphics.DrawString("椎管内麻醉", ptzt8, Brushes.Black, x + 25, y_weibu);
            //e.Graphics.DrawString("神经阻滞 " + txtSJZZ.Controls[0].Text, ptzt8, Brushes.Black, x + 25, y_weibu);
            //e.Graphics.DrawLine(ptp, new Point(70 + x, Y_unLine), new Point(220 + x, Y_unLine));
            //if (txtSJZZ.Controls[0].Text == "")
            //{
            //    e.Graphics.DrawLine(ptp, new Point(80 + x, Y_unLine), new Point(xStd + x, y_weibu + 2));
            //}
            e.Graphics.DrawString("手术医师 " + txtSSYS.Controls[0].Text, ptzt8, Brushes.Black, x + 240, y_weibu);
            e.Graphics.DrawLine(ptp, new Point(285 + x, Y_unLine), new Point(520 + x, Y_unLine));


            y_weibu = y_weibu + 20; Y_unLine = y_weibu + 13;
            e.Graphics.DrawString("穿刺点 " + comboccd1.Text, ptzt8, Brushes.Black, x + 40, y_weibu);
            e.Graphics.DrawLine(ptp, new Point(80 + x, Y_unLine), new Point(120 + x, Y_unLine));
            if (comboccd1.Text == "")
            {
                e.Graphics.DrawLine(ptp, new Point(90 + x, Y_unLine), new Point(110 + x, y_weibu + 2));
            }
            e.Graphics.DrawString("置管↑" + combozg1.Text, ptzt8, Brushes.Black, x + 130, y_weibu);
            e.Graphics.DrawLine(ptp, new Point(160 + x, Y_unLine), new Point(190 + x, Y_unLine));
            if (combozg1.Text == "")
            {
                e.Graphics.DrawLine(ptp, new Point(xStd + x, Y_unLine), new Point(180 + x, y_weibu + 2));
            }
            e.Graphics.DrawString("cm ", ptzt8, Brushes.Black, x + 195, y_weibu);
            e.Graphics.DrawString("麻醉医师 " + txtMZYS.Controls[0].Text, ptzt8, Brushes.Black, x + 240, y_weibu);
            e.Graphics.DrawLine(ptp, new Point(285 + x, Y_unLine), new Point(520 + x, Y_unLine));

            y_weibu = y_weibu + 20; Y_unLine = y_weibu + 13;
            e.Graphics.DrawString("穿刺点 " + combocc2.Text, ptzt8, Brushes.Black, x + 40, y_weibu);
            e.Graphics.DrawLine(ptp, new Point(80 + x, Y_unLine), new Point(120 + x, Y_unLine));
            if (combocc2.Text == "")
            {
                e.Graphics.DrawLine(ptp, new Point(90 + x, Y_unLine), new Point(110 + x, y_weibu + 2));
            }
            e.Graphics.DrawString("置管↓" + combozg2.Text, ptzt8, Brushes.Black, x + 130, y_weibu);
            e.Graphics.DrawLine(ptp, new Point(160 + x, Y_unLine), new Point(190 + x, Y_unLine));
            if (combozg2.Text == "")
            {
                e.Graphics.DrawLine(ptp, new Point(xStd + x, Y_unLine), new Point(180 + x, y_weibu + 2));
            }
            e.Graphics.DrawString("cm ", ptzt8, Brushes.Black, x + 195, y_weibu);

            e.Graphics.DrawString("器械护士 " + txtQXHS.Controls[0].Text, ptzt8, Brushes.Black, x + 240, y_weibu);
            e.Graphics.DrawLine(ptp, new Point(285 + x, Y_unLine), new Point(370 + x, Y_unLine));
            if (txtQXHS.Controls[0].Text == "")
            {
                e.Graphics.DrawLine(ptp, new Point(290 + x, Y_unLine), new Point(330 + x, y_weibu + 2));
            }
            e.Graphics.DrawString("巡回护士 " + txtXHHS.Controls[0].Text, ptzt8, Brushes.Black, x + 375, y_weibu);
            e.Graphics.DrawLine(ptp, new Point(420 + x, Y_unLine), new Point(520 + x, Y_unLine));
            if (txtXHHS.Controls[0].Text == "")
            {
                e.Graphics.DrawLine(ptp, new Point(430 + x, Y_unLine), new Point(470 + x, y_weibu + 2));
            }

            y_weibu = y_weibu + 20; Y_unLine = y_weibu + 13;
            e.Graphics.DrawString("麻醉方式 " + txtMZFF.Controls[0].Text, ptzt8, Brushes.Black, x + 25, y_weibu);
            e.Graphics.DrawLine(ptp, new Point(70 + x, Y_unLine), new Point(220 + x, Y_unLine));
            e.Graphics.DrawString("手术时间 " + userSSSJ.Controls[0].Text, ptzt8, Brushes.Black, x + 240, y_weibu);
            e.Graphics.DrawLine(ptp, new Point(285 + x, Y_unLine), new Point(370 + x, Y_unLine));
            e.Graphics.DrawString("体温监测 " + txtTWJC.Controls[0].Text, ptzt8, Brushes.Black, x + 375, y_weibu);
            e.Graphics.DrawLine(ptp, new Point(420 + x, Y_unLine), new Point(520 + x, Y_unLine));
            if (txtTWJC.Controls[0].Text == "")
            {
                e.Graphics.DrawLine(ptp, new Point(430 + x, Y_unLine), new Point(500 + x, y_weibu + 2));
            }
            y_weibu = y_weibu + 20; Y_unLine = y_weibu + 13;
            e.Graphics.DrawString("气管插管 " + UserCG.Controls[0].Text, ptzt8, Brushes.Black, x + 25, y_weibu);
            e.Graphics.DrawLine(ptp, new Point(70 + x, Y_unLine), new Point(160 + x, Y_unLine));
            if (UserCG.Controls[0].Text == "")
            {
                e.Graphics.DrawLine(ptp, new Point(80 + x, Y_unLine), new Point(160 + x, y_weibu + 2));
            }
            e.Graphics.DrawString("手术体位" + userControlsstw.Controls[0].Text, ptzt8, Brushes.Black, x + 170, y_weibu);
            e.Graphics.DrawLine(ptp, new Point(215 + x, Y_unLine), new Point(360 + x, Y_unLine));
            if (userControlsstw.Controls[0].Text == "")
            {
                e.Graphics.DrawLine(ptp, new Point(230 + x, Y_unLine), new Point(330 + x, y_weibu + 2));
            }
            e.Graphics.DrawString("麻醉效果" + comboBoxmzxg.Text, ptzt8, Brushes.Black, x + 375, y_weibu);
            e.Graphics.DrawLine(ptp, new Point(420 + x, Y_unLine), new Point(440 + x, Y_unLine));
            e.Graphics.DrawString("评分" + textBoxpingf.Text, ptzt8, Brushes.Black, x + 450, y_weibu);
            e.Graphics.DrawLine(ptp, new Point(475 + x, Y_unLine), new Point(520 + x, Y_unLine));
            //显示计算总量
            jisuan_yy = jisuan_yy + 5; Y_unLine = jisuan_yy + 13;
            //e.Graphics.DrawString("失血量 " + txtShixue.Controls[0].Text, ptzt8, Brushes.Black, x + 540, jisuan_yy);
            e.Graphics.DrawString("失血量 " + txtboxShixue.Text, ptzt8, Brushes.Black, x + 540, jisuan_yy);
            e.Graphics.DrawLine(ptp, new Point(575 + x, Y_unLine), new Point(620 + x, Y_unLine));
            if (txtboxShixue.Text == "")
            {
                e.Graphics.DrawLine(ptp, new Point(580 + x, Y_unLine), new Point(600 + x, jisuan_yy + 2));
            }
            e.Graphics.DrawString("ml ", ptzt8, Brushes.Black, x + 625, jisuan_yy);
            jisuan_yy = jisuan_yy + 17; Y_unLine = jisuan_yy + 13;
            //e.Graphics.DrawString("尿  量 "+txtChuniao.Controls[0].Text, ptzt8, Brushes.Black, x + 540, jisuan_yy);
            e.Graphics.DrawString("尿  量 " + txtboxChuniao.Text, ptzt8, Brushes.Black, x + 540, jisuan_yy);
            e.Graphics.DrawLine(ptp, new Point(575 + x, Y_unLine), new Point(620 + x, Y_unLine));
            if (txtboxChuniao.Text == "")
            {
                e.Graphics.DrawLine(ptp, new Point(580 + x, Y_unLine), new Point(600 + x, jisuan_yy + 2));
            }
            e.Graphics.DrawString("ml ", ptzt8, Brushes.Black, x + 625, jisuan_yy);
            jisuan_yy = jisuan_yy + 17; Y_unLine = jisuan_yy + 13;
            //e.Graphics.DrawString("其  他 " + txtqita.Controls[0].Text, ptzt8, Brushes.Black, x + 540, jisuan_yy);
            e.Graphics.DrawString("其  他 " + txtboxqita.Text, ptzt8, Brushes.Black, x + 540, jisuan_yy);
            e.Graphics.DrawLine(ptp, new Point(575 + x, Y_unLine), new Point(620 + x, Y_unLine));
            e.Graphics.DrawString("ml ", ptzt8, Brushes.Black, x + 625, jisuan_yy);
            if (txtboxqita.Text == "")
            {
                e.Graphics.DrawLine(ptp, new Point(580 + x, Y_unLine), new Point(600 + x, jisuan_yy + 2));
            }
            jisuan_yy = jisuan_yy + 17; Y_unLine = jisuan_yy + 13;
            //e.Graphics.DrawString("总出量 " + txtSumCL.Controls[0].Text, ptzt8, Brushes.Black, x + 540, jisuan_yy);
            e.Graphics.DrawString("总出量 " + txtboxSumCL.Text, ptzt8, Brushes.Black, x + 540, jisuan_yy);
            e.Graphics.DrawLine(ptp, new Point(575 + x, Y_unLine), new Point(620 + x, Y_unLine));
            if (txtboxSumCL.Text == "")
            {
                e.Graphics.DrawLine(ptp, new Point(580 + x, Y_unLine), new Point(600 + x, jisuan_yy + 2));
            }
            e.Graphics.DrawString("ml ", ptzt8, Brushes.Black, x + 625, jisuan_yy);
            jisuan_yy = jisuan_yy + 17; Y_unLine = jisuan_yy + 13;
            //e.Graphics.DrawString("输血量 " + txtSXL.Controls[0].Text, ptzt8, Brushes.Black, x + 540, jisuan_yy);
            e.Graphics.DrawString("输血量 " + txtboxSXL.Text, ptzt8, Brushes.Black, x + 540, jisuan_yy);
            e.Graphics.DrawLine(ptp, new Point(575 + x, Y_unLine), new Point(620 + x, Y_unLine));
            if (txtboxSXL.Text == "")
            {
                e.Graphics.DrawLine(ptp, new Point(580 + x, Y_unLine), new Point(600 + x, jisuan_yy + 2));
            }
            e.Graphics.DrawString("ml ", ptzt8, Brushes.Black, x + 625, jisuan_yy);
            jisuan_yy = jisuan_yy + 17; Y_unLine = jisuan_yy + 13;
            //e.Graphics.DrawString("代血浆 " + txtDXJ.Controls[0].Text, ptzt8, Brushes.Black, x + 540, jisuan_yy);
            e.Graphics.DrawString("代血浆 " + txtboxDXJ.Text, ptzt8, Brushes.Black, x + 540, jisuan_yy);
            e.Graphics.DrawLine(ptp, new Point(575 + x, Y_unLine), new Point(620 + x, Y_unLine));
            if (txtboxDXJ.Text == "")
            {
                e.Graphics.DrawLine(ptp, new Point(580 + x, Y_unLine), new Point(600 + x, jisuan_yy + 2));
            }
            e.Graphics.DrawString("ml ", ptzt8, Brushes.Black, x + 625, jisuan_yy);
            jisuan_yy = jisuan_yy + 17; Y_unLine = jisuan_yy + 13;
            //e.Graphics.DrawString("晶体量 " + txtJTL.Controls[0].Text, ptzt8, Brushes.Black, x + 540, jisuan_yy);
            e.Graphics.DrawString("晶体量 " + txtboxJTL.Text, ptzt8, Brushes.Black, x + 540, jisuan_yy);
            e.Graphics.DrawLine(ptp, new Point(575 + x, Y_unLine), new Point(620 + x, Y_unLine));
            if (txtboxJTL.Text == "")
            {
                e.Graphics.DrawLine(ptp, new Point(580 + x, Y_unLine), new Point(600 + x, jisuan_yy + 2));
            }
            e.Graphics.DrawString("ml ", ptzt8, Brushes.Black, x + 625, jisuan_yy);
            jisuan_yy = jisuan_yy + 17; Y_unLine = jisuan_yy + 13;
            //e.Graphics.DrawString("总入量 " + txtZRL.Controls[0].Text, ptzt8, Brushes.Black, x + 540, jisuan_yy);
            e.Graphics.DrawString("总入量 " + txtboxZRL.Text, ptzt8, Brushes.Black, x + 540, jisuan_yy);
            e.Graphics.DrawLine(ptp, new Point(575 + x, Y_unLine), new Point(620 + x, Y_unLine));
            if (txtboxZRL.Text == "")
            {
                e.Graphics.DrawLine(ptp, new Point(580 + x, Y_unLine), new Point(600 + x, jisuan_yy + 2));
            }
            e.Graphics.DrawString("ml ", ptzt8, Brushes.Black, x + 625, jisuan_yy);

            #endregion
            y_weibu = y_weibu + 20;
            e.Graphics.DrawLine(pblack2, new Point(20 + x, 100 + y), new Point(650 + x, 100 + y));
            e.Graphics.DrawLine(pblack2, new Point(20 + x, 100 + y), new Point(20 + x, y_weibu));
            e.Graphics.DrawLine(pblack2, new Point(650 + x, 100 + y), new Point(650 + x, y_weibu));
            e.Graphics.DrawLine(pblack2, new Point(20 + x, y_weibu), new Point(650 + x, y_weibu));




        }