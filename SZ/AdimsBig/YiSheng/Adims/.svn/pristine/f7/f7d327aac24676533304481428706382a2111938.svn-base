using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Windows.Forms;
using adims_MODEL;
using adims_DAL;
using adims_BLL;

namespace main.科室事物管理
{
    public partial class data_add : Form
    {
        private string nodeText; 
        private string tableName;
        string id = "";
        bool flag = false;
        DataTable mytable = new DataTable();

        public data_add(string text,string name)
        {   
            InitializeComponent();
            nodeText = text;
            tableName = name;
        }

        private void button1_Click(object sender, EventArgs e)
        {
            string name = name_txt.Text.ToString();
            if (name == "")
            {
                MessageBox.Show(nodeText + "不能为空", "警告");
                return;
            }
            mytable = AdimsProvider.GetData1(tableName, nodeText);
            for (int i = 0; i < mytable.Rows.Count; i++)
            {
                if (mytable.Rows[i][1].ToString().Trim() == name.Trim())
                {
                    MessageBox.Show("此" + nodeText + "已存在，添加被拒绝", "警告");
                    return;
                }
            }
            AdimsProvider.AddData1(name,tableName);
            mytable = AdimsProvider.GetData1(tableName, nodeText);
            dataGridView1.Columns.Clear();
            DataGridViewTextBoxColumn mycol = new DataGridViewTextBoxColumn();
            mycol.HeaderText = mytable.Columns[1].Caption;
            mycol.Visible = true;
            mycol.ReadOnly = true;
            dataGridView1.Columns.Add(mycol);
            for (int j = 0; j < mytable.Rows.Count; j++)
            {
                DataGridViewRow newrow = new DataGridViewRow();
                dataGridView1.Rows.Add(newrow);
                dataGridView1.Rows[j].Cells[0].Value = mytable.Rows[j][1];
            }
        }

        private void data_add_Load(object sender, EventArgs e)
        {
            label1.Text = nodeText;
            mytable = AdimsProvider.GetData1(tableName, nodeText);
            dataGridView1.Columns.Clear();
            DataGridViewTextBoxColumn mycol = new DataGridViewTextBoxColumn();
            mycol.HeaderText = mytable.Columns[1].Caption;
            mycol.Visible = true;
            mycol.ReadOnly = true;
            dataGridView1.Columns.Add(mycol);
            for (int j = 0; j < mytable.Rows.Count; j++)
            {   DataGridViewRow newrow=new DataGridViewRow();
                dataGridView1.Rows.Add(newrow);
                dataGridView1.Rows[j].Cells[0].Value = mytable.Rows[j][1]; 
            }
            
        }

        private void button2_Click(object sender, EventArgs e)
        {
            if(flag)
            {
                string name = name_txt.Text.ToString();
                if (name == "")
                {
                    MessageBox.Show(nodeText + "不能为空", "警告");
                    return;
                }
                mytable = AdimsProvider.GetData1(tableName, nodeText);
                for (int i = 0; i < mytable.Rows.Count; i++)
                {
                    if (mytable.Rows[i][1].ToString().Trim() == name.Trim())
                    {
                        MessageBox.Show("此" + nodeText + "已存在，修改被拒绝", "警告");
                        return;
                    }
                }
                AdimsProvider.UpdateData1(id, name, tableName);
                mytable = AdimsProvider.GetData1(tableName, nodeText);
                dataGridView1.Columns.Clear();
                DataGridViewTextBoxColumn mycol = new DataGridViewTextBoxColumn();
                mycol.HeaderText = mytable.Columns[1].Caption;
                mycol.Visible = true;
                mycol.ReadOnly = true;
                dataGridView1.Columns.Add(mycol);
                for (int j = 0; j < mytable.Rows.Count; j++)
                {
                    DataGridViewRow newrow = new DataGridViewRow();
                    dataGridView1.Rows.Add(newrow);
                    dataGridView1.Rows[j].Cells[0].Value = mytable.Rows[j][1];
                }
                flag = false;
            }
        }
        
        
        private void dataGridView1_CellMouseDoubleClick(object sender, DataGridViewCellMouseEventArgs e)
        {
            if (e.RowIndex != dataGridView1.Rows.Count-1)
            {
                mytable = AdimsProvider.GetData1(tableName, nodeText);
                name_txt.Text = dataGridView1.Rows[(e.RowIndex)].Cells[0].Value.ToString();
                id = mytable.Rows[(e.RowIndex)][0].ToString();
                //    id = dataGridView1.Rows[(e.RowIndex)].Cells[0].Value.ToString();
                flag = true;
            }
        }

        private void button3_Click(object sender, EventArgs e)
        {
            if (flag)
            {
                AdimsProvider.DeleteData(id, tableName);
                mytable = AdimsProvider.GetData1(tableName, nodeText);
                dataGridView1.Columns.Clear();
                DataGridViewTextBoxColumn mycol = new DataGridViewTextBoxColumn();
                mycol.HeaderText = mytable.Columns[1].Caption;
                mycol.Visible = true;
                mycol.ReadOnly = true;
                dataGridView1.Columns.Add(mycol);
                for (int j = 0; j < mytable.Rows.Count; j++)
                {
                    DataGridViewRow newrow = new DataGridViewRow();
                    dataGridView1.Rows.Add(newrow);
                    dataGridView1.Rows[j].Cells[0].Value = mytable.Rows[j][1];
                }
                flag = false;
            }
        }


    }
}
