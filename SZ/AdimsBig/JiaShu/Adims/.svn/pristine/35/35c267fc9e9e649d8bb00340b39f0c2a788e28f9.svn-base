using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Windows.Forms;
using adims_BLL;

namespace main.权限管理
{
    public partial class jurisdiction_distribute : Form
    {
        public jurisdiction_distribute() 
        {
            InitializeComponent();
        }
        AdimsController bll = new AdimsController();
        ImageList myImage = new ImageList();
        private void jurisdiction_distribute_Load(object sender, EventArgs e)
        {
            // TODO: 这行代码将数据加载到表“heYiAMISDataSet.Adims_position_jurisdiction”中。您可以根据需要移动或删除它。
           // this.adims_position_jurisdictionTableAdapter.Fill(this.heYiAMISDataSet.Adims_position_jurisdiction);
            myImage.Images.Add(Image.FromFile(@".\ico\lion.ico"));
            myImage.Images.Add(Image.FromFile(@".\ico\schmetterling.ico"));
            module_tree.ImageList = myImage;
            foreach (TreeNode node in module_tree.Nodes)
            {
                node.ImageIndex = 0;           
            }
            DataTable pj_table = (bll.Select_PJ()).Tables[0];
            int count = pj_table.Rows.Count;
            int i=0;
            for (i = 0; i < count; i++) 
            {
                position_checklist.Items.Add(pj_table.Rows[i][1]);
            } 
        }
        private void button1_Click(object sender, EventArgs e)
        {
            int count = position_checklist.Items.Count;
            int i = 0;
            for (i = 0; i < count; i++)
            {
                position_checklist.SetItemCheckState(i,CheckState.Checked);

            }
        }

        private void button2_Click(object sender, EventArgs e)
        {
            int count = position_checklist.Items.Count;
            int i = 0;
            for (i = 0; i < count; i++)
            {
                position_checklist.SetItemCheckState(i, CheckState.Unchecked);

            }
        }

        private void button4_Click(object sender, EventArgs e)
        {
            this.Close();
        }

        private void button3_Click(object sender, EventArgs e)
        {
            if (module_name == "") return;           
            int count=position_checklist.Items.Count;
            int[] be_able=new int[count];
            int i=0;
            for(i=0;i<count;i++)
                be_able[i]=0;
            for(i=0;i<count;i++)
                be_able[i]=(position_checklist.GetItemCheckState(i)==CheckState.Checked)?1:0;
            int module_index=0;
            if (module_name.Length < 3)
            {
                module_index = int.Parse(module_name);
                bll.Upadte_jurisdiction(module_index, be_able);
            }
            else
            {
                string[] module_array = module_name.Trim().Split('.');
                int start_index=int.Parse(module_array[0]);
                int index_array_count=int.Parse(module_array[1]);
                int[] module_index_array=new int[index_array_count];
                for (i = 0; i < index_array_count; i++) module_index_array[i] = start_index + i;
                for (i = 0; i < index_array_count; i++)
                {
                    module_index = module_index_array[i];
                    bll.Upadte_jurisdiction(module_index, be_able);
                } 
            }
        }
        string module_name = "";
        private void module_tree_DoubleClick(object sender, EventArgs e)
        {
            int index = 0;
            int i = 0, j = 0;
            for(i=0;i<position_checklist.Items.Count;i++)
            position_checklist.SetItemCheckState(i, CheckState.Unchecked);
            module_tree.SelectedNode.SelectedImageIndex = 1;
            if (module_tree.SelectedNode == null) return;
            string positionlist = "";
            module_label.Text = module_tree.SelectedNode.Text;
            module_name = module_tree.SelectedNode.Name;
            DataSet jurisdiction_set = new DataSet();
            DataTable jurisdiction_table = new DataTable();
            int count = 0;
            int length = 0;
            char[] temp;
            if (module_tree.SelectedNode.Name.Length > 2)
            {
                string[] module_array = module_name.Trim().Split('.');
                int start_index = int.Parse(module_array[0]);
                int index_array_count = int.Parse(module_array[1]);
                int[] module_index_array = new int[index_array_count];
                for ( i = 0; i < index_array_count; i++) module_index_array[i] = start_index + i;               
                jurisdiction_set = bll.Select_position_jurisdiction();               
                jurisdiction_table = jurisdiction_set.Tables[0];
                count = jurisdiction_table.Rows.Count;
                length = jurisdiction_table.Rows[0][1].ToString().Length;
                 temp = new char[length];
                for (i = 0; i < count; i++)
                {
                    temp = jurisdiction_table.Rows[i][1].ToString().ToCharArray();
                    for ( j = 0; j < index_array_count; j++)
                    {
                        index = module_index_array[j];
                        if (temp[index] != '1') break;

                    }
                    if (j == index_array_count)
                    {
                        position_checklist.SetItemCheckState(i, CheckState.Checked);
                        positionlist += position_checklist.Items[i].ToString();
                        positionlist += ",";                      
                    }
                    else position_checklist.SetItemCheckState(i, CheckState.Unchecked);
                }
                if (positionlist != "") positionlist = positionlist.Substring(0, positionlist.Length - 1);
                position_list_txt.Text = positionlist;
                return;
            }
                        
            index = int.Parse(module_tree.SelectedNode.Name);
            jurisdiction_set = bll.Select_position_jurisdiction();
            jurisdiction_table = jurisdiction_set.Tables[0];
            count = jurisdiction_table.Rows.Count;
            length = jurisdiction_table.Rows[0][1].ToString().Length;         
            temp = new char[length];
            for (i = 0; i < count; i++)
            {
                temp = jurisdiction_table.Rows[i][1].ToString().ToCharArray();
                if (temp[index] == '1')
                {
                    position_checklist.SetItemCheckState(i, CheckState.Checked);
                    positionlist += position_checklist.Items[i].ToString();
                    positionlist += ",";
                }
                else position_checklist.SetItemCheckState(i, CheckState.Unchecked);
            }
            if (positionlist != "") positionlist = positionlist.Substring(0, positionlist.Length - 1);
            position_list_txt.Text = positionlist;
        }     
 }
}
